yosys -p "synth_ice40 -top top  -json top.json" top.v

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.33+79 (git sha1 b52f6cb19, gcc 12.2.0-14 -fPIC -Os)


-- Parsing `top.v' using frontend ` -vlog2k' --

1. Executing Verilog-2005 frontend: top.v
Parsing Verilog input from `top.v' to AST representation.
Storing AST representation for module `$abstract\top'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top  -json top.json' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\top'.
Generating RTLIL representation for module `\top'.
Warning: wire '\spi_reset' is assigned in a block at top.v:68.7-68.20.
Warning: wire '\spi_wr_en' is assigned in a block at top.v:69.7-69.20.
Warning: wire '\spi_wr_data' is assigned in a block at top.v:70.7-70.22.
Warning: wire '\spi_rd_ack' is assigned in a block at top.v:71.7-71.21.
top.v:87: Warning: Identifier `\clk' is implicitly declared.
top.v:68: Warning: Identifier `\spi_reset' is implicitly declared.
top.v:69: Warning: Identifier `\spi_wr_en' is implicitly declared.
top.v:70: Warning: Identifier `\spi_wr_data' is implicitly declared.
top.v:71: Warning: Identifier `\spi_rd_ack' is implicitly declared.

2.3.1. Analyzing design hierarchy..
Top module:  \top

2.3.2. Analyzing design hierarchy..
Top module:  \top
Removing unused module `$abstract\top'.
Removed 1 unused modules.

2.4. Executing PROC pass (convert processes to netlists).

2.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173 in module SB_DFFSR.
Marked 13 switch rules as full_case in process $proc$top.v:87$388 in module top.
Removed a total of 0 dead cases.

2.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 45 assignments to connections.

2.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$244'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$240'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$233'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$229'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$222'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$219'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$216'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$213'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$210'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$208'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$206'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$202'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$195'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$191'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$184'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$181'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$178'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$175'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$172'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$170'.
  Set init value: \Q = 1'0
Found init rule in `\top.$proc$top.v:0$478'.
  Set init value: \state_spi = 8'00000000
  Set init value: \spi_stb = 1'0
  Set init value: \spi_rw = 1'0
  Set init value: \spi_adr = 8'00000000
  Set init value: \spi_dati = 8'00000000
  Set init value: \led = 3'000
  Set init value: \is_spi_init = 1'0
  Set init value: \counter_send = 8'00000000
  Set init value: \counter_vector = 4'0000

2.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
Found async reset \S in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Found async reset \R in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Found async reset \S in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182'.
Found async reset \R in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176'.

2.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~45 debug messages>

2.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$244'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$240'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$233'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$229'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$222'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$219'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$216'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$213'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$210'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$209'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$208'.
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:882$207'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$206'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$202'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$195'.
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$191'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$184'.
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$181'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$178'.
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$175'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$172'.
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$171'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$170'.
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:271$169'.
Creating decoders for process `\top.$proc$top.v:0$478'.
Creating decoders for process `\top.$proc$top.v:87$388'.
     1/48: $4$mem2bits$\command_data$top.v:250$384[7:0]$476
     2/48: $3$mem2bits$\command_data$top.v:250$384[7:0]$473
     3/48: $7$memwr$\data_vector$top.v:236$383_EN[7:0]$465
     4/48: $7$memwr$\data_vector$top.v:236$383_DATA[7:0]$464
     5/48: $7$memwr$\data_vector$top.v:236$383_ADDR[3:0]$463
     6/48: $6$memwr$\data_vector$top.v:236$383_EN[7:0]$461
     7/48: $6$memwr$\data_vector$top.v:236$383_DATA[7:0]$460
     8/48: $6$memwr$\data_vector$top.v:236$383_ADDR[3:0]$459
     9/48: $5$memwr$\data_vector$top.v:236$383_EN[7:0]$456
    10/48: $5$memwr$\data_vector$top.v:236$383_DATA[7:0]$455
    11/48: $5$memwr$\data_vector$top.v:236$383_ADDR[3:0]$454
    12/48: $4$memwr$\data_vector$top.v:236$383_EN[7:0]$450
    13/48: $4$memwr$\data_vector$top.v:236$383_DATA[7:0]$449
    14/48: $4$memwr$\data_vector$top.v:236$383_ADDR[3:0]$448
    15/48: $3$memwr$\data_vector$top.v:236$383_EN[7:0]$445
    16/48: $3$memwr$\data_vector$top.v:236$383_DATA[7:0]$444
    17/48: $3$memwr$\data_vector$top.v:236$383_ADDR[3:0]$443
    18/48: $2$mem2bits$\command_data$top.v:250$384[7:0]$440
    19/48: $2$memwr$\data_vector$top.v:236$383_EN[7:0]$439
    20/48: $2$memwr$\data_vector$top.v:236$383_DATA[7:0]$438
    21/48: $2$memwr$\data_vector$top.v:236$383_ADDR[3:0]$437
    22/48: $2$memwr$\command_data$top.v:226$382_EN[7:0]$436
    23/48: $2$memwr$\command_data$top.v:226$382_DATA[7:0]$435
    24/48: $2$memwr$\command_data$top.v:226$382_ADDR[7:0]$434
    25/48: $2$memwr$\command_data$top.v:208$381_EN[7:0]$431
    26/48: $2$memwr$\command_data$top.v:208$381_DATA[7:0]$430
    27/48: $2$memwr$\command_data$top.v:208$381_ADDR[7:0]$429
    28/48: $1$mem2bits$\command_data$top.v:250$384[7:0]$408
    29/48: $1$memwr$\data_vector$top.v:236$383_EN[7:0]$407
    30/48: $1$memwr$\data_vector$top.v:236$383_DATA[7:0]$406
    31/48: $1$memwr$\data_vector$top.v:236$383_ADDR[3:0]$405
    32/48: $1$memwr$\command_data$top.v:226$382_EN[7:0]$404
    33/48: $1$memwr$\command_data$top.v:226$382_DATA[7:0]$403
    34/48: $1$memwr$\command_data$top.v:226$382_ADDR[7:0]$402
    35/48: $1$memwr$\command_data$top.v:208$381_EN[7:0]$401
    36/48: $1$memwr$\command_data$top.v:208$381_DATA[7:0]$400
    37/48: $1$memwr$\command_data$top.v:208$381_ADDR[7:0]$399
    38/48: $0\spi_stb[0:0]
    39/48: $0\counter_vector[3:0]
    40/48: $0\data_to_send[7:0]
    41/48: $0\counter_send[7:0]
    42/48: $0\counter_read[7:0]
    43/48: $0\is_spi_init[0:0]
    44/48: $0\led[2:0]
    45/48: $0\spi_dati[7:0]
    46/48: $0\spi_adr[7:0]
    47/48: $0\spi_rw[0:0]
    48/48: $0\state_spi[7:0]

2.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\top.\spi_reset' from process `\top.$proc$top.v:0$478'.
No latch inferred for signal `\top.\spi_wr_en' from process `\top.$proc$top.v:0$478'.
No latch inferred for signal `\top.\spi_wr_data' from process `\top.$proc$top.v:0$478'.
No latch inferred for signal `\top.\spi_rd_ack' from process `\top.$proc$top.v:0$478'.

2.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
  created $adff cell `$procdff$1086' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
  created $dff cell `$procdff$1087' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
  created $adff cell `$procdff$1088' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
  created $dff cell `$procdff$1089' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
  created $adff cell `$procdff$1090' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
  created $dff cell `$procdff$1091' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
  created $adff cell `$procdff$1092' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211'.
  created $dff cell `$procdff$1093' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$209'.
  created $dff cell `$procdff$1094' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:882$207'.
  created $dff cell `$procdff$1095' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
  created $adff cell `$procdff$1096' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196'.
  created $dff cell `$procdff$1097' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
  created $adff cell `$procdff$1098' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185'.
  created $dff cell `$procdff$1099' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182'.
  created $adff cell `$procdff$1100' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179'.
  created $dff cell `$procdff$1101' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176'.
  created $adff cell `$procdff$1102' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173'.
  created $dff cell `$procdff$1103' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$171'.
  created $dff cell `$procdff$1104' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:271$169'.
  created $dff cell `$procdff$1105' with positive edge clock.
Creating register for signal `\top.\state_spi' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1106' with positive edge clock.
Creating register for signal `\top.\spi_stb' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1107' with positive edge clock.
Creating register for signal `\top.\spi_rw' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1108' with positive edge clock.
Creating register for signal `\top.\spi_adr' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1109' with positive edge clock.
Creating register for signal `\top.\spi_dati' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1110' with positive edge clock.
Creating register for signal `\top.\led' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1111' with positive edge clock.
Creating register for signal `\top.\is_spi_init' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1112' with positive edge clock.
Creating register for signal `\top.\counter_read' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1113' with positive edge clock.
Creating register for signal `\top.\counter_send' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1114' with positive edge clock.
Creating register for signal `\top.\data_to_send' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1115' with positive edge clock.
Creating register for signal `\top.\counter_vector' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1116' with positive edge clock.
Creating register for signal `\top.$memwr$\command_data$top.v:208$381_ADDR' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1117' with positive edge clock.
Creating register for signal `\top.$memwr$\command_data$top.v:208$381_DATA' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1118' with positive edge clock.
Creating register for signal `\top.$memwr$\command_data$top.v:208$381_EN' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1119' with positive edge clock.
Creating register for signal `\top.$memwr$\command_data$top.v:226$382_ADDR' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1120' with positive edge clock.
Creating register for signal `\top.$memwr$\command_data$top.v:226$382_DATA' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1121' with positive edge clock.
Creating register for signal `\top.$memwr$\command_data$top.v:226$382_EN' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1122' with positive edge clock.
Creating register for signal `\top.$memwr$\data_vector$top.v:236$383_ADDR' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1123' with positive edge clock.
Creating register for signal `\top.$memwr$\data_vector$top.v:236$383_DATA' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1124' with positive edge clock.
Creating register for signal `\top.$memwr$\data_vector$top.v:236$383_EN' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1125' with positive edge clock.
Creating register for signal `\top.$mem2bits$\command_data$top.v:250$384' using process `\top.$proc$top.v:87$388'.
  created $dff cell `$procdff$1126' with positive edge clock.

2.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$244'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$240'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$233'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$229'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$222'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$219'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$216'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$213'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$210'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$208'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:882$207'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$206'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$202'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$195'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$191'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$184'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$181'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$178'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$175'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$172'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$170'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:271$169'.
Removing empty process `top.$proc$top.v:0$478'.
Found and cleaned up 27 empty switches in `\top.$proc$top.v:87$388'.
Removing empty process `top.$proc$top.v:87$388'.
Cleaned up 45 empty switches.

2.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~24 debug messages>

2.5. Executing FLATTEN pass (flatten design).

2.6. Executing TRIBUF pass.

2.7. Executing DEMINOUT pass (demote inout ports to input or output).

2.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 25 unused cells and 246 unused wires.
<suppressed ~28 debug messages>

2.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\spi_miso is used but has no driver.
Warning: Wire top.\clk is used but has no driver.
Found and reported 2 problems.

2.11. Executing OPT pass (performing simple optimizations).

2.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~258 debug messages>
Removed a total of 86 cells.

2.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$550.
    dead port 1/2 on $mux $procmux$553.
    dead port 1/2 on $mux $procmux$556.
    dead port 1/2 on $mux $procmux$559.
    dead port 2/2 on $mux $procmux$561.
    dead port 2/2 on $mux $procmux$563.
    dead port 2/2 on $mux $procmux$571.
    dead port 1/2 on $mux $procmux$574.
    dead port 1/2 on $mux $procmux$577.
    dead port 1/2 on $mux $procmux$580.
    dead port 2/2 on $mux $procmux$582.
    dead port 2/2 on $mux $procmux$584.
    dead port 2/2 on $mux $procmux$592.
    dead port 1/2 on $mux $procmux$595.
    dead port 1/2 on $mux $procmux$598.
    dead port 1/2 on $mux $procmux$601.
    dead port 2/2 on $mux $procmux$603.
    dead port 2/2 on $mux $procmux$605.
    dead port 1/2 on $mux $procmux$613.
    dead port 1/2 on $mux $procmux$616.
    dead port 1/2 on $mux $procmux$619.
    dead port 2/2 on $mux $procmux$621.
    dead port 2/2 on $mux $procmux$623.
    dead port 1/2 on $mux $procmux$631.
    dead port 1/2 on $mux $procmux$634.
    dead port 1/2 on $mux $procmux$637.
    dead port 2/2 on $mux $procmux$639.
    dead port 2/2 on $mux $procmux$641.
    dead port 1/2 on $mux $procmux$649.
    dead port 1/2 on $mux $procmux$652.
    dead port 1/2 on $mux $procmux$655.
    dead port 2/2 on $mux $procmux$657.
    dead port 2/2 on $mux $procmux$659.
    dead port 1/2 on $mux $procmux$667.
    dead port 1/2 on $mux $procmux$670.
    dead port 2/2 on $mux $procmux$672.
    dead port 2/2 on $mux $procmux$674.
    dead port 1/2 on $mux $procmux$682.
    dead port 1/2 on $mux $procmux$685.
    dead port 2/2 on $mux $procmux$687.
    dead port 2/2 on $mux $procmux$689.
    dead port 1/2 on $mux $procmux$697.
    dead port 1/2 on $mux $procmux$700.
    dead port 2/2 on $mux $procmux$702.
    dead port 2/2 on $mux $procmux$704.
    dead port 1/2 on $mux $procmux$712.
    dead port 2/2 on $mux $procmux$714.
    dead port 2/2 on $mux $procmux$716.
    dead port 1/2 on $mux $procmux$724.
    dead port 2/2 on $mux $procmux$726.
    dead port 2/2 on $mux $procmux$728.
    dead port 1/2 on $mux $procmux$736.
    dead port 2/2 on $mux $procmux$738.
    dead port 2/2 on $mux $procmux$740.
    dead port 2/2 on $mux $procmux$747.
    dead port 2/2 on $mux $procmux$749.
    dead port 2/2 on $mux $procmux$756.
    dead port 2/2 on $mux $procmux$758.
    dead port 2/2 on $mux $procmux$765.
    dead port 2/2 on $mux $procmux$767.
    dead port 2/2 on $mux $procmux$779.
    dead port 2/2 on $mux $procmux$785.
    dead port 2/2 on $mux $procmux$791.
    dead port 2/2 on $mux $procmux$797.
    dead port 2/2 on $mux $procmux$803.
    dead port 2/2 on $mux $procmux$809.
    dead port 2/2 on $mux $procmux$816.
    dead port 2/2 on $mux $procmux$823.
    dead port 2/2 on $mux $procmux$830.
Removed 69 multiplexer ports.
<suppressed ~20 debug messages>

2.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $procmux$1009: { $procmux$1014_CMP $procmux$1013_CMP $auto$opt_reduce.cc:134:opt_pmux$1131 $procmux$1010_CMP }
    Consolidated identical input bits for $mux cell $procmux$795:
      Old ports: A=8'00000000, B=8'11111111, Y=$procmux$795_Y
      New ports: A=1'0, B=1'1, Y=$procmux$795_Y [0]
      New connections: $procmux$795_Y [7:1] = { $procmux$795_Y [0] $procmux$795_Y [0] $procmux$795_Y [0] $procmux$795_Y [0] $procmux$795_Y [0] $procmux$795_Y [0] $procmux$795_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$814:
      Old ports: A=8'00000000, B=8'11111111, Y=$procmux$814_Y
      New ports: A=1'0, B=1'1, Y=$procmux$814_Y [0]
      New connections: $procmux$814_Y [7:1] = { $procmux$814_Y [0] $procmux$814_Y [0] $procmux$814_Y [0] $procmux$814_Y [0] $procmux$814_Y [0] $procmux$814_Y [0] $procmux$814_Y [0] }
    New ctrl vector for $pmux cell $procmux$1017: { $procmux$1015_CMP $procmux$1014_CMP $procmux$1013_CMP $procmux$1012_CMP $procmux$1011_CMP $auto$opt_reduce.cc:134:opt_pmux$1135 $procmux$1010_CMP $auto$opt_reduce.cc:134:opt_pmux$1133 }
    Consolidated identical input bits for $mux cell $procmux$548:
      Old ports: A=8'00000000, B=8'11111111, Y=$procmux$548_Y
      New ports: A=1'0, B=1'1, Y=$procmux$548_Y [0]
      New connections: $procmux$548_Y [7:1] = { $procmux$548_Y [0] $procmux$548_Y [0] $procmux$548_Y [0] $procmux$548_Y [0] $procmux$548_Y [0] $procmux$548_Y [0] $procmux$548_Y [0] }
    New ctrl vector for $pmux cell $procmux$1029: { $auto$opt_reduce.cc:134:opt_pmux$1139 $auto$opt_reduce.cc:134:opt_pmux$1137 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$610:
      Old ports: A=8'00000000, B=$7$memwr$\data_vector$top.v:236$383_EN[7:0]$465, Y=$procmux$610_Y
      New ports: A=1'0, B=$procmux$548_Y [0], Y=$procmux$610_Y [0]
      New connections: $procmux$610_Y [7:1] = { $procmux$610_Y [0] $procmux$610_Y [0] $procmux$610_Y [0] $procmux$610_Y [0] $procmux$610_Y [0] $procmux$610_Y [0] $procmux$610_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$845:
      Old ports: A=8'00000000, B=$2$memwr$\command_data$top.v:226$382_EN[7:0]$436, Y=$0$memwr$\command_data$top.v:226$382_EN[7:0]$394
      New ports: A=1'0, B=$procmux$795_Y [0], Y=$0$memwr$\command_data$top.v:226$382_EN[7:0]$394 [0]
      New connections: $0$memwr$\command_data$top.v:226$382_EN[7:0]$394 [7:1] = { $0$memwr$\command_data$top.v:226$382_EN[7:0]$394 [0] $0$memwr$\command_data$top.v:226$382_EN[7:0]$394 [0] $0$memwr$\command_data$top.v:226$382_EN[7:0]$394 [0] $0$memwr$\command_data$top.v:226$382_EN[7:0]$394 [0] $0$memwr$\command_data$top.v:226$382_EN[7:0]$394 [0] $0$memwr$\command_data$top.v:226$382_EN[7:0]$394 [0] $0$memwr$\command_data$top.v:226$382_EN[7:0]$394 [0] }
    Consolidated identical input bits for $mux cell $procmux$855:
      Old ports: A=8'00000000, B=$2$memwr$\command_data$top.v:208$381_EN[7:0]$431, Y=$0$memwr$\command_data$top.v:208$381_EN[7:0]$391
      New ports: A=1'0, B=$procmux$814_Y [0], Y=$0$memwr$\command_data$top.v:208$381_EN[7:0]$391 [0]
      New connections: $0$memwr$\command_data$top.v:208$381_EN[7:0]$391 [7:1] = { $0$memwr$\command_data$top.v:208$381_EN[7:0]$391 [0] $0$memwr$\command_data$top.v:208$381_EN[7:0]$391 [0] $0$memwr$\command_data$top.v:208$381_EN[7:0]$391 [0] $0$memwr$\command_data$top.v:208$381_EN[7:0]$391 [0] $0$memwr$\command_data$top.v:208$381_EN[7:0]$391 [0] $0$memwr$\command_data$top.v:208$381_EN[7:0]$391 [0] $0$memwr$\command_data$top.v:208$381_EN[7:0]$391 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$664:
      Old ports: A=$6$memwr$\data_vector$top.v:236$383_EN[7:0]$461, B=8'00000000, Y=$procmux$664_Y
      New ports: A=$procmux$610_Y [0], B=1'0, Y=$procmux$664_Y [0]
      New connections: $procmux$664_Y [7:1] = { $procmux$664_Y [0] $procmux$664_Y [0] $procmux$664_Y [0] $procmux$664_Y [0] $procmux$664_Y [0] $procmux$664_Y [0] $procmux$664_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$709:
      Old ports: A=$5$memwr$\data_vector$top.v:236$383_EN[7:0]$456, B=8'00000000, Y=$procmux$709_Y
      New ports: A=$procmux$664_Y [0], B=1'0, Y=$procmux$709_Y [0]
      New connections: $procmux$709_Y [7:1] = { $procmux$709_Y [0] $procmux$709_Y [0] $procmux$709_Y [0] $procmux$709_Y [0] $procmux$709_Y [0] $procmux$709_Y [0] $procmux$709_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$745:
      Old ports: A=$4$memwr$\data_vector$top.v:236$383_EN[7:0]$450, B=8'00000000, Y=$procmux$745_Y
      New ports: A=$procmux$709_Y [0], B=1'0, Y=$procmux$745_Y [0]
      New connections: $procmux$745_Y [7:1] = { $procmux$745_Y [0] $procmux$745_Y [0] $procmux$745_Y [0] $procmux$745_Y [0] $procmux$745_Y [0] $procmux$745_Y [0] $procmux$745_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$777:
      Old ports: A=8'00000000, B=$3$memwr$\data_vector$top.v:236$383_EN[7:0]$445, Y=$procmux$777_Y
      New ports: A=1'0, B=$procmux$745_Y [0], Y=$procmux$777_Y [0]
      New connections: $procmux$777_Y [7:1] = { $procmux$777_Y [0] $procmux$777_Y [0] $procmux$777_Y [0] $procmux$777_Y [0] $procmux$777_Y [0] $procmux$777_Y [0] $procmux$777_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$836:
      Old ports: A=8'00000000, B=$2$memwr$\data_vector$top.v:236$383_EN[7:0]$439, Y=$0$memwr$\data_vector$top.v:236$383_EN[7:0]$397
      New ports: A=1'0, B=$procmux$777_Y [0], Y=$0$memwr$\data_vector$top.v:236$383_EN[7:0]$397 [0]
      New connections: $0$memwr$\data_vector$top.v:236$383_EN[7:0]$397 [7:1] = { $0$memwr$\data_vector$top.v:236$383_EN[7:0]$397 [0] $0$memwr$\data_vector$top.v:236$383_EN[7:0]$397 [0] $0$memwr$\data_vector$top.v:236$383_EN[7:0]$397 [0] $0$memwr$\data_vector$top.v:236$383_EN[7:0]$397 [0] $0$memwr$\data_vector$top.v:236$383_EN[7:0]$397 [0] $0$memwr$\data_vector$top.v:236$383_EN[7:0]$397 [0] $0$memwr$\data_vector$top.v:236$383_EN[7:0]$397 [0] }
  Optimizing cells in module \top.
Performed a total of 14 changes.

2.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

2.11.6. Executing OPT_DFF pass (perform DFF optimizations).

2.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 170 unused wires.
<suppressed ~1 debug messages>

2.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.9. Rerunning OPT passes. (Maybe there is more to do..)

2.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

2.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $procmux$1044: { $procmux$1015_CMP $procmux$1014_CMP $procmux$1013_CMP $procmux$1012_CMP $procmux$1022_CMP $procmux$1021_CMP $procmux$1010_CMP $auto$opt_reduce.cc:134:opt_pmux$1141 }
    New ctrl vector for $pmux cell $procmux$869: $auto$opt_reduce.cc:134:opt_pmux$1143
  Optimizing cells in module \top.
Performed a total of 2 changes.

2.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.11.13. Executing OPT_DFF pass (perform DFF optimizations).

2.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.16. Rerunning OPT passes. (Maybe there is more to do..)

2.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

2.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.11.20. Executing OPT_DFF pass (perform DFF optimizations).

2.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.23. Finished OPT passes. (There is nothing left to do.)

2.12. Executing FSM pass (extract and optimize FSM).

2.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.spi_adr as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.state_spi as FSM state register:
    Register has an initialization value.

2.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$1116 ($dff) from module top (D = $procmux$909_Y, Q = \counter_vector).
Adding EN signal on $procdff$1115 ($dff) from module top (D = $procmux$940_Y, Q = \data_to_send).
Adding EN signal on $procdff$1114 ($dff) from module top (D = $0\counter_send[7:0], Q = \counter_send).
Adding EN signal on $procdff$1113 ($dff) from module top (D = $0\counter_read[7:0], Q = \counter_read).
Adding EN signal on $procdff$1112 ($dff) from module top (D = 1'1, Q = \is_spi_init).
Adding EN signal on $procdff$1111 ($dff) from module top (D = $memrd$\command_data$top.v:250$477_DATA [2:0], Q = \led).
Adding EN signal on $procdff$1110 ($dff) from module top (D = $0\spi_dati[7:0], Q = \spi_dati).
Adding EN signal on $procdff$1109 ($dff) from module top (D = $0\spi_adr[7:0], Q = \spi_adr).
Adding EN signal on $procdff$1108 ($dff) from module top (D = $0\spi_rw[0:0], Q = \spi_rw).
Adding SRST signal on $procdff$1107 ($dff) from module top (D = $procmux$867_Y, Q = \spi_stb, rval = 1'0).
Adding EN signal on $procdff$1106 ($dff) from module top (D = $0\state_spi[7:0], Q = \state_spi).

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 15 unused cells and 15 unused wires.
<suppressed ~16 debug messages>

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

2.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

2.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

2.13.13. Executing OPT_DFF pass (perform DFF optimizations).

2.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

2.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.16. Rerunning OPT passes. (Maybe there is more to do..)

2.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~23 debug messages>

2.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.20. Executing OPT_DFF pass (perform DFF optimizations).

2.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.23. Finished OPT passes. (There is nothing left to do.)

2.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 5 address bits (of 8) from memory init port top.$auto$proc_memwr.cc:45:proc_memwr$1127 (command_data).
Removed top 5 address bits (of 8) from memory init port top.$auto$proc_memwr.cc:45:proc_memwr$1128 (command_data).
Removed top 29 address bits (of 32) from memory read port top.$memrd$\command_data$top.v:230$446 (command_data).
Removed top 29 address bits (of 32) from memory read port top.$memrd$\command_data$top.v:250$477 (command_data).
Removed top 29 bits (of 32) from port B of cell top.$lt$top.v:159$421 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$add$top.v:192$426 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$add$top.v:192$426 ($add).
Removed top 3 bits (of 8) from port B of cell top.$eq$top.v:210$432 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$add$top.v:223$441 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$add$top.v:223$441 ($add).
Removed top 6 bits (of 8) from port B of cell top.$eq$top.v:230$447 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$eq$top.v:232$453 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$eq$top.v:234$458 ($eq).
Removed top 29 bits (of 32) from port B of cell top.$lt$top.v:235$462 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$add$top.v:237$466 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$add$top.v:237$466 ($add).
Removed top 5 bits (of 8) from port B of cell top.$eq$top.v:239$468 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$eq$top.v:246$472 ($eq).
Removed top 5 bits (of 8) from mux cell top.$procmux$851 ($mux).
Removed top 5 bits (of 8) from mux cell top.$procmux$863 ($mux).
Removed top 5 bits (of 8) from port B of cell top.$procmux$1002_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$procmux$1010_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$procmux$1011_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$procmux$1012_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$procmux$1013_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$procmux$1014_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$procmux$1019_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$procmux$1021_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$procmux$1022_CMP0 ($eq).
Removed top 4 bits (of 8) from mux cell top.$procmux$1051 ($mux).
Removed top 4 bits (of 8) from mux cell top.$procmux$1061 ($mux).
Removed top 4 bits (of 8) from mux cell top.$procmux$1064 ($mux).
Removed top 4 bits (of 8) from mux cell top.$procmux$1066 ($mux).
Removed top 5 bits (of 8) from mux cell top.$procmux$807 ($mux).
Removed top 5 bits (of 8) from wire top.$0$memwr$\command_data$top.v:208$381_ADDR[7:0]$389.
Removed top 5 bits (of 8) from wire top.$0$memwr$\command_data$top.v:226$382_ADDR[7:0]$392.
Removed top 5 bits (of 8) from wire top.$2$memwr$\command_data$top.v:208$381_ADDR[7:0]$429.
Removed top 24 bits (of 32) from wire top.$add$top.v:192$426_Y.
Removed top 4 bits (of 8) from wire top.$procmux$1051_Y.
Removed top 4 bits (of 8) from wire top.$procmux$1061_Y.
Removed top 4 bits (of 8) from wire top.$procmux$1064_Y.
Removed top 4 bits (of 8) from wire top.$procmux$1066_Y.

2.15. Executing PEEPOPT pass (run peephole optimizers).

2.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

2.17. Executing SHARE pass (SAT-based resource sharing).

2.18. Executing TECHMAP pass (map to technology primitives).

2.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.18.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~62 debug messages>

2.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.21. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$top.v:192$426 ($add).
  creating $macc model for $add$top.v:223$441 ($add).
  creating $macc model for $add$top.v:237$466 ($add).
  creating $alu model for $macc $add$top.v:237$466.
  creating $alu model for $macc $add$top.v:223$441.
  creating $alu model for $macc $add$top.v:192$426.
  creating $alu model for $lt$top.v:159$421 ($lt): new $alu
  creating $alu model for $lt$top.v:235$462 ($lt): new $alu
  creating $alu cell for $lt$top.v:235$462: $auto$alumacc.cc:485:replace_alu$1242
  creating $alu cell for $lt$top.v:159$421: $auto$alumacc.cc:485:replace_alu$1253
  creating $alu cell for $add$top.v:192$426: $auto$alumacc.cc:485:replace_alu$1264
  creating $alu cell for $add$top.v:223$441: $auto$alumacc.cc:485:replace_alu$1267
  creating $alu cell for $add$top.v:237$466: $auto$alumacc.cc:485:replace_alu$1270
  created 5 $alu and 0 $macc cells.

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6 debug messages>

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~23 debug messages>

2.22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.6. Executing OPT_DFF pass (perform DFF optimizations).

2.22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

2.22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.22.9. Rerunning OPT passes. (Maybe there is more to do..)

2.22.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~23 debug messages>

2.22.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.13. Executing OPT_DFF pass (perform DFF optimizations).

2.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.22.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.22.16. Finished OPT passes. (There is nothing left to do.)

2.23. Executing MEMORY pass.

2.23.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.23.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.23.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing top.command_data write port 0.
  Analyzing top.command_data write port 1.
  Analyzing top.data_vector write port 0.

2.23.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.23.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\command_data'[0] in module `\top': merging output FF to cell.
    Write port 0: don't care on collision.
    Write port 1: don't care on collision.
Checking read port `\command_data'[1] in module `\top': no output FF found.
Checking read port `\data_vector'[0] in module `\top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port address `\command_data'[1] in module `\top': no address FF found.
Checking read port address `\data_vector'[0] in module `\top': address FF has fully-defined init value, not supported.

2.23.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

2.23.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory top.command_data by address:
Consolidating write ports of memory top.command_data by address:
  Merging ports 0, 1 (address \counter_read [2:0]).

2.23.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.23.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

2.23.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.25. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.command_data
using FF mapping for memory top.data_vector
<suppressed ~40 debug messages>

2.26. Executing TECHMAP pass (map to technology primitives).

2.26.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

2.26.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

2.26.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.27. Executing ICE40_BRAMINIT pass.

2.28. Executing OPT pass (performing simple optimizations).

2.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~49 debug messages>

2.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $auto$ff.cc:266:slice$1208 ($dffe) from module top (removing D path).
Handling const CLK on $auto$ff.cc:266:slice$1207 ($sdff) from module top (removing D path).
Handling const CLK on $auto$ff.cc:266:slice$1204 ($dffe) from module top (removing D path).
Handling const CLK on $auto$ff.cc:266:slice$1201 ($dffe) from module top (removing D path).
Handling const CLK on $auto$ff.cc:266:slice$1198 ($dffe) from module top (removing D path).
Handling const CLK on $auto$ff.cc:266:slice$1192 ($dffe) from module top (removing D path).
Handling const CLK on $auto$ff.cc:266:slice$1179 ($dffe) from module top (removing D path).
Handling const CLK on $auto$ff.cc:266:slice$1164 ($dffe) from module top (removing D path).
Handling const CLK on $auto$ff.cc:266:slice$1155 ($dffe) from module top (removing D path).
Handling const CLK on $auto$ff.cc:266:slice$1144 ($dffe) from module top (removing D path).

2.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 96 unused cells and 146 unused wires.
<suppressed ~97 debug messages>

2.28.5. Rerunning OPT passes. (Removed registers in this run.)

2.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~7 debug messages>

2.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.28.8. Executing OPT_DFF pass (perform DFF optimizations).

2.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 8 unused wires.
<suppressed ~2 debug messages>

2.28.10. Finished fast OPT passes.

2.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \command_data in module \top:
  created 8 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of top.command_data: $\command_data$rdreg[0]
  read interface: 1 $dff and 14 $mux cells.
  write interface: 0 write mux blocks.

2.30. Executing OPT pass (performing simple optimizations).

2.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~17 debug messages>

2.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.6. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $\command_data$rdreg[0] ($dffe) from module top (removing D path).

2.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 34 unused wires.
<suppressed ~1 debug messages>

2.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3 debug messages>

2.30.9. Rerunning OPT passes. (Maybe there is more to do..)

2.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.13. Executing OPT_DFF pass (perform DFF optimizations).

2.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.30.16. Finished OPT passes. (There is nothing left to do.)

2.31. Executing ICE40_WRAPCARRY pass (wrap carries).

2.32. Executing TECHMAP pass (map to technology primitives).

2.32.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.32.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.32.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

2.33. Executing OPT pass (performing simple optimizations).

2.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.3. Executing OPT_DFF pass (perform DFF optimizations).

2.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.5. Finished fast OPT passes.

2.34. Executing ICE40_OPT pass (performing simple optimizations).

2.34.1. Running ICE40 specific optimizations.

2.34.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.34.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.34.4. Executing OPT_DFF pass (perform DFF optimizations).

2.34.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.34.6. Finished OPT passes. (There is nothing left to do.)

2.35. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.36. Executing TECHMAP pass (map to technology primitives).

2.36.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.36.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>

2.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

2.39. Executing ICE40_OPT pass (performing simple optimizations).

2.39.1. Running ICE40 specific optimizations.

2.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.39.4. Executing OPT_DFF pass (perform DFF optimizations).

2.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.39.6. Finished OPT passes. (There is nothing left to do.)

2.40. Executing TECHMAP pass (map to technology primitives).

2.40.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.40.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.41. Executing ABC pass (technology mapping using ABC).

2.41.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.42. Executing ICE40_WRAPCARRY pass (wrap carries).

2.43. Executing TECHMAP pass (map to technology primitives).

2.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>

2.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:        0
  with \SB_CARRY    (#0)    0
  with \SB_CARRY    (#1)    0

Eliminating LUTs.
Number of LUTs:        0
  with \SB_CARRY    (#0)    0
  with \SB_CARRY    (#1)    0

Combining LUTs.
Number of LUTs:        0
  with \SB_CARRY    (#0)    0
  with \SB_CARRY    (#1)    0

Eliminated 0 LUTs.
Combined 0 LUTs.

2.45. Executing TECHMAP pass (map to technology primitives).

2.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.45.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

2.46. Executing AUTONAME pass.

2.47. Executing HIERARCHY pass (managing design hierarchy).

2.47.1. Analyzing design hierarchy..
Top module:  \top

2.47.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.48. Printing statistics.

=== top ===

   Number of wires:                 28
   Number of wire bits:             82
   Number of public wires:          28
   Number of public wire bits:      82
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     SB_SPI                          1

2.49. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.50. Executing JSON backend.

Warnings: 11 unique messages, 11 total
End of script. Logfile hash: 0df11a263a, CPU: user 1.11s system 0.01s, MEM: 20.50 MB peak
Yosys 0.33+79 (git sha1 b52f6cb19, gcc 12.2.0-14 -fPIC -Os)
Time spent: 52% 13x read_verilog (0 sec), 10% 22x opt_clean (0 sec), ...
nextpnr-ice40 --up5k --package sg48 --json top.json --pcf pico-ice.pcf --asc top.asc
Info: constrained 'CLK' to bel 'X12/Y31/io1'
Info: constrained 'SPI_MOSI' to bel 'X23/Y0/io1'
Info: constrained 'SPI_MISO' to bel 'X23/Y0/io0'
Info: constrained 'SPI_SCK' to bel 'X24/Y0/io0'
Info: constrained 'SPI_SS' to bel 'X24/Y0/io1'
Info: constrained 'LED_G' to bel 'X4/Y31/io0'
Info: constrained 'LED_B' to bel 'X5/Y31/io0'
Info: constrained 'LED_R' to bel 'X6/Y31/io0'

Info: Packing constants..
Info: Packing IOs..
Info: Packing LUT-FFs..
Info:        0 LCs used as LUT4 only
Info:        0 LCs used as LUT4 and DFF
Info: Packing non-LUT FFs..
Info:        0 LCs used as DFF only
Info: Packing carries..
Info:        0 LCs used as CARRY only
Info: Packing indirect carry+LUT pairs...
Info:        0 LUTs merged into carry LCs
Info: Packing RAMs..
Info: Placing PLLs..
Info: Packing special functions..
Info:   constrained SB_SPI 'SB_SPI_inst' to X0/Y0/spi_0
Info: Packing PLLs..
Info: Promoting globals..
Info: Constraining chains...
Info:        0 LCs used to legalise carry chains.
Info: Checksum: 0x084ab170

Info: Device utilisation:
Info: 	         ICESTORM_LC:     2/ 5280     0%
Info: 	        ICESTORM_RAM:     0/   30     0%
Info: 	               SB_IO:     8/   96     8%
Info: 	               SB_GB:     0/    8     0%
Info: 	        ICESTORM_PLL:     0/    1     0%
Info: 	         SB_WARMBOOT:     0/    1     0%
Info: 	        ICESTORM_DSP:     0/    8     0%
Info: 	      ICESTORM_HFOSC:     0/    1     0%
Info: 	      ICESTORM_LFOSC:     0/    1     0%
Info: 	              SB_I2C:     0/    2     0%
Info: 	              SB_SPI:     1/    2    50%
Info: 	              IO_I3C:     0/    2     0%
Info: 	         SB_LEDDA_IP:     0/    1     0%
Info: 	         SB_RGBA_DRV:     0/    1     0%
Info: 	      ICESTORM_SPRAM:     0/    4     0%

Info: Placed 9 cells based on constraints.
Info: Creating initial analytic placement for 2 cells, random placement wirelen = 190.
Info:     at initial placer iter 0, wirelen = 140
Info:     at initial placer iter 1, wirelen = 140
Info:     at initial placer iter 2, wirelen = 140
Info:     at initial placer iter 3, wirelen = 140
Info: Running main analytical placer, max placement attempts per cell = 10000.
Info:     at iteration #1, type ICESTORM_LC: wirelen solved = 140, spread = 140, legal = 142; time = 0.00s
Info: HeAP Placer Time: 0.00s
Info:   of which solving equations: 0.00s
Info:   of which spreading cells: 0.00s
Info:   of which strict legalisation: 0.00s

Info: Running simulated annealing placer for refinement.
Info:   at iteration #1: temp = 0.000000, timing cost = 0, wirelen = 142
Info:   at iteration #2: temp = 0.000000, timing cost = 0, wirelen = 142 
Info: SA placement time 0.00s

Info: No Fmax available; no interior timing paths found in design.
Info: Checksum: 0x25343dc1

Info: Routing..
Info: Setting up routing queue.
Info: Routing 26 arcs.
Info:            |   (re-)routed arcs  |   delta    | remaining|       time spent     |
Info:    IterCnt |  w/ripup   wo/ripup |  w/r  wo/r |      arcs| batch(sec) total(sec)|
Info:         26 |        0         26 |    0    26 |         0|       0.17       0.17|
Info: Routing complete.
Info: Router1 time 0.17s
Info: Checksum: 0xae2d9f00

Info: Critical path report for cross-domain path '<async>' -> 'posedge CLK$SB_IO_IN':
Info: curr total
Info:  0.0  0.0  Source SPI_MOSI$sb_io.D_IN_0
Info:  8.2  8.2    Net SPI_MOSI$SB_IO_IN (23,0) -> (0,0)
Info:                Sink SB_SPI_inst.SI
Info:                Defined in:
Info:                  top.v:9.101-9.109
Info:  1.5  9.7  Setup SB_SPI_inst.SI
Info: 1.5 ns logic, 8.2 ns routing

Info: Critical path report for cross-domain path 'posedge CLK$SB_IO_IN' -> '<async>':
Info: curr total
Info:  1.5  1.5  Source SB_SPI_inst.SO
Info:  7.6  9.1    Net SPI_MISO$SB_IO_OUT (0,0) -> (23,0)
Info:                Sink SPI_MISO$sb_io.D_OUT_0
Info:                Defined in:
Info:                  top.v:9.118-9.126
Info: 1.5 ns logic, 7.6 ns routing

Info: No Fmax available; no interior timing paths found in design.

Info: Program finished normally.
icepack top.asc top.bin
