yosys -p "synth_ice40 -top top  -json top.json" top.v

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.33+79 (git sha1 b52f6cb19, gcc 12.2.0-14 -fPIC -Os)


-- Parsing `top.v' using frontend ` -vlog2k' --

1. Executing Verilog-2005 frontend: top.v
Parsing Verilog input from `top.v' to AST representation.
Storing AST representation for module `$abstract\top'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top  -json top.json' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\top'.
Generating RTLIL representation for module `\top'.

2.3.1. Analyzing design hierarchy..
Top module:  \top

2.3.2. Analyzing design hierarchy..
Top module:  \top
Removing unused module `$abstract\top'.
Removed 1 unused modules.

2.4. Executing PROC pass (convert processes to netlists).

2.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173 in module SB_DFFSR.
Marked 13 switch rules as full_case in process $proc$top.v:91$388 in module top.
Removed a total of 0 dead cases.

2.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 45 assignments to connections.

2.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$244'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$240'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$233'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$229'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$222'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$219'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$216'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$213'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$210'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$208'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$206'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$202'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$195'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$191'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$184'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$181'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$178'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$175'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$172'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$170'.
  Set init value: \Q = 1'0
Found init rule in `\top.$proc$top.v:0$478'.
  Set init value: \state_spi = 8'00000000
  Set init value: \spi_stb = 1'0
  Set init value: \spi_rw = 1'0
  Set init value: \spi_adr = 8'00000000
  Set init value: \spi_dati = 8'00000000
  Set init value: \led = 3'000
  Set init value: \is_spi_init = 1'0
  Set init value: \counter_send = 8'00000000
  Set init value: \counter_vector = 4'0000

2.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
Found async reset \S in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Found async reset \R in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Found async reset \S in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182'.
Found async reset \R in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176'.

2.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~45 debug messages>

2.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$244'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$240'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$233'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$229'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$222'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$219'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$216'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$213'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$210'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$209'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$208'.
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:882$207'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$206'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$202'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$195'.
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$191'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$184'.
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$181'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$178'.
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$175'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$172'.
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$171'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$170'.
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:271$169'.
Creating decoders for process `\top.$proc$top.v:0$478'.
Creating decoders for process `\top.$proc$top.v:91$388'.
     1/48: $4$mem2bits$\command_data$top.v:254$384[7:0]$476
     2/48: $3$mem2bits$\command_data$top.v:254$384[7:0]$473
     3/48: $7$memwr$\data_vector$top.v:240$383_EN[7:0]$465
     4/48: $7$memwr$\data_vector$top.v:240$383_DATA[7:0]$464
     5/48: $7$memwr$\data_vector$top.v:240$383_ADDR[3:0]$463
     6/48: $6$memwr$\data_vector$top.v:240$383_EN[7:0]$461
     7/48: $6$memwr$\data_vector$top.v:240$383_DATA[7:0]$460
     8/48: $6$memwr$\data_vector$top.v:240$383_ADDR[3:0]$459
     9/48: $5$memwr$\data_vector$top.v:240$383_EN[7:0]$456
    10/48: $5$memwr$\data_vector$top.v:240$383_DATA[7:0]$455
    11/48: $5$memwr$\data_vector$top.v:240$383_ADDR[3:0]$454
    12/48: $4$memwr$\data_vector$top.v:240$383_EN[7:0]$450
    13/48: $4$memwr$\data_vector$top.v:240$383_DATA[7:0]$449
    14/48: $4$memwr$\data_vector$top.v:240$383_ADDR[3:0]$448
    15/48: $3$memwr$\data_vector$top.v:240$383_EN[7:0]$445
    16/48: $3$memwr$\data_vector$top.v:240$383_DATA[7:0]$444
    17/48: $3$memwr$\data_vector$top.v:240$383_ADDR[3:0]$443
    18/48: $2$mem2bits$\command_data$top.v:254$384[7:0]$440
    19/48: $2$memwr$\data_vector$top.v:240$383_EN[7:0]$439
    20/48: $2$memwr$\data_vector$top.v:240$383_DATA[7:0]$438
    21/48: $2$memwr$\data_vector$top.v:240$383_ADDR[3:0]$437
    22/48: $2$memwr$\command_data$top.v:230$382_EN[7:0]$436
    23/48: $2$memwr$\command_data$top.v:230$382_DATA[7:0]$435
    24/48: $2$memwr$\command_data$top.v:230$382_ADDR[7:0]$434
    25/48: $2$memwr$\command_data$top.v:212$381_EN[7:0]$431
    26/48: $2$memwr$\command_data$top.v:212$381_DATA[7:0]$430
    27/48: $2$memwr$\command_data$top.v:212$381_ADDR[7:0]$429
    28/48: $1$mem2bits$\command_data$top.v:254$384[7:0]$408
    29/48: $1$memwr$\data_vector$top.v:240$383_EN[7:0]$407
    30/48: $1$memwr$\data_vector$top.v:240$383_DATA[7:0]$406
    31/48: $1$memwr$\data_vector$top.v:240$383_ADDR[3:0]$405
    32/48: $1$memwr$\command_data$top.v:230$382_EN[7:0]$404
    33/48: $1$memwr$\command_data$top.v:230$382_DATA[7:0]$403
    34/48: $1$memwr$\command_data$top.v:230$382_ADDR[7:0]$402
    35/48: $1$memwr$\command_data$top.v:212$381_EN[7:0]$401
    36/48: $1$memwr$\command_data$top.v:212$381_DATA[7:0]$400
    37/48: $1$memwr$\command_data$top.v:212$381_ADDR[7:0]$399
    38/48: $0\spi_stb[0:0]
    39/48: $0\counter_vector[3:0]
    40/48: $0\data_to_send[7:0]
    41/48: $0\counter_send[7:0]
    42/48: $0\counter_read[7:0]
    43/48: $0\is_spi_init[0:0]
    44/48: $0\led[2:0]
    45/48: $0\spi_dati[7:0]
    46/48: $0\spi_adr[7:0]
    47/48: $0\spi_rw[0:0]
    48/48: $0\state_spi[7:0]

2.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\top.\spi_reset' from process `\top.$proc$top.v:0$478'.
No latch inferred for signal `\top.\spi_wr_en' from process `\top.$proc$top.v:0$478'.
No latch inferred for signal `\top.\spi_wr_data' from process `\top.$proc$top.v:0$478'.
No latch inferred for signal `\top.\spi_rd_ack' from process `\top.$proc$top.v:0$478'.

2.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
  created $adff cell `$procdff$1086' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
  created $dff cell `$procdff$1087' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
  created $adff cell `$procdff$1088' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
  created $dff cell `$procdff$1089' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
  created $adff cell `$procdff$1090' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
  created $dff cell `$procdff$1091' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
  created $adff cell `$procdff$1092' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211'.
  created $dff cell `$procdff$1093' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$209'.
  created $dff cell `$procdff$1094' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:882$207'.
  created $dff cell `$procdff$1095' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
  created $adff cell `$procdff$1096' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196'.
  created $dff cell `$procdff$1097' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
  created $adff cell `$procdff$1098' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185'.
  created $dff cell `$procdff$1099' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182'.
  created $adff cell `$procdff$1100' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179'.
  created $dff cell `$procdff$1101' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176'.
  created $adff cell `$procdff$1102' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173'.
  created $dff cell `$procdff$1103' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$171'.
  created $dff cell `$procdff$1104' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:271$169'.
  created $dff cell `$procdff$1105' with positive edge clock.
Creating register for signal `\top.\state_spi' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1106' with positive edge clock.
Creating register for signal `\top.\spi_stb' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1107' with positive edge clock.
Creating register for signal `\top.\spi_rw' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1108' with positive edge clock.
Creating register for signal `\top.\spi_adr' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1109' with positive edge clock.
Creating register for signal `\top.\spi_dati' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1110' with positive edge clock.
Creating register for signal `\top.\led' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1111' with positive edge clock.
Creating register for signal `\top.\is_spi_init' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1112' with positive edge clock.
Creating register for signal `\top.\counter_read' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1113' with positive edge clock.
Creating register for signal `\top.\counter_send' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1114' with positive edge clock.
Creating register for signal `\top.\data_to_send' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1115' with positive edge clock.
Creating register for signal `\top.\counter_vector' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1116' with positive edge clock.
Creating register for signal `\top.$memwr$\command_data$top.v:212$381_ADDR' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1117' with positive edge clock.
Creating register for signal `\top.$memwr$\command_data$top.v:212$381_DATA' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1118' with positive edge clock.
Creating register for signal `\top.$memwr$\command_data$top.v:212$381_EN' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1119' with positive edge clock.
Creating register for signal `\top.$memwr$\command_data$top.v:230$382_ADDR' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1120' with positive edge clock.
Creating register for signal `\top.$memwr$\command_data$top.v:230$382_DATA' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1121' with positive edge clock.
Creating register for signal `\top.$memwr$\command_data$top.v:230$382_EN' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1122' with positive edge clock.
Creating register for signal `\top.$memwr$\data_vector$top.v:240$383_ADDR' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1123' with positive edge clock.
Creating register for signal `\top.$memwr$\data_vector$top.v:240$383_DATA' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1124' with positive edge clock.
Creating register for signal `\top.$memwr$\data_vector$top.v:240$383_EN' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1125' with positive edge clock.
Creating register for signal `\top.$mem2bits$\command_data$top.v:254$384' using process `\top.$proc$top.v:91$388'.
  created $dff cell `$procdff$1126' with positive edge clock.

2.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$244'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$240'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$233'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$229'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$222'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$220'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$219'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$216'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$214'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$213'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$210'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$208'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:882$207'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$206'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$202'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$195'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$191'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$184'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$182'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$181'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$178'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$176'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$175'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$172'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$170'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:271$169'.
Removing empty process `top.$proc$top.v:0$478'.
Found and cleaned up 27 empty switches in `\top.$proc$top.v:91$388'.
Removing empty process `top.$proc$top.v:91$388'.
Cleaned up 45 empty switches.

2.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~24 debug messages>

2.5. Executing FLATTEN pass (flatten design).

2.6. Executing TRIBUF pass.

2.7. Executing DEMINOUT pass (demote inout ports to input or output).

2.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 25 unused cells and 246 unused wires.
<suppressed ~28 debug messages>

2.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\spi_miso is used but has no driver.
Found and reported 1 problems.

2.11. Executing OPT pass (performing simple optimizations).

2.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~258 debug messages>
Removed a total of 86 cells.

2.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$550.
    dead port 1/2 on $mux $procmux$553.
    dead port 1/2 on $mux $procmux$556.
    dead port 1/2 on $mux $procmux$559.
    dead port 2/2 on $mux $procmux$561.
    dead port 2/2 on $mux $procmux$563.
    dead port 2/2 on $mux $procmux$571.
    dead port 1/2 on $mux $procmux$574.
    dead port 1/2 on $mux $procmux$577.
    dead port 1/2 on $mux $procmux$580.
    dead port 2/2 on $mux $procmux$582.
    dead port 2/2 on $mux $procmux$584.
    dead port 2/2 on $mux $procmux$592.
    dead port 1/2 on $mux $procmux$595.
    dead port 1/2 on $mux $procmux$598.
    dead port 1/2 on $mux $procmux$601.
    dead port 2/2 on $mux $procmux$603.
    dead port 2/2 on $mux $procmux$605.
    dead port 1/2 on $mux $procmux$613.
    dead port 1/2 on $mux $procmux$616.
    dead port 1/2 on $mux $procmux$619.
    dead port 2/2 on $mux $procmux$621.
    dead port 2/2 on $mux $procmux$623.
    dead port 1/2 on $mux $procmux$631.
    dead port 1/2 on $mux $procmux$634.
    dead port 1/2 on $mux $procmux$637.
    dead port 2/2 on $mux $procmux$639.
    dead port 2/2 on $mux $procmux$641.
    dead port 1/2 on $mux $procmux$649.
    dead port 1/2 on $mux $procmux$652.
    dead port 1/2 on $mux $procmux$655.
    dead port 2/2 on $mux $procmux$657.
    dead port 2/2 on $mux $procmux$659.
    dead port 1/2 on $mux $procmux$667.
    dead port 1/2 on $mux $procmux$670.
    dead port 2/2 on $mux $procmux$672.
    dead port 2/2 on $mux $procmux$674.
    dead port 1/2 on $mux $procmux$682.
    dead port 1/2 on $mux $procmux$685.
    dead port 2/2 on $mux $procmux$687.
    dead port 2/2 on $mux $procmux$689.
    dead port 1/2 on $mux $procmux$697.
    dead port 1/2 on $mux $procmux$700.
    dead port 2/2 on $mux $procmux$702.
    dead port 2/2 on $mux $procmux$704.
    dead port 1/2 on $mux $procmux$712.
    dead port 2/2 on $mux $procmux$714.
    dead port 2/2 on $mux $procmux$716.
    dead port 1/2 on $mux $procmux$724.
    dead port 2/2 on $mux $procmux$726.
    dead port 2/2 on $mux $procmux$728.
    dead port 1/2 on $mux $procmux$736.
    dead port 2/2 on $mux $procmux$738.
    dead port 2/2 on $mux $procmux$740.
    dead port 2/2 on $mux $procmux$747.
    dead port 2/2 on $mux $procmux$749.
    dead port 2/2 on $mux $procmux$756.
    dead port 2/2 on $mux $procmux$758.
    dead port 2/2 on $mux $procmux$765.
    dead port 2/2 on $mux $procmux$767.
    dead port 2/2 on $mux $procmux$779.
    dead port 2/2 on $mux $procmux$785.
    dead port 2/2 on $mux $procmux$791.
    dead port 2/2 on $mux $procmux$797.
    dead port 2/2 on $mux $procmux$803.
    dead port 2/2 on $mux $procmux$809.
    dead port 2/2 on $mux $procmux$816.
    dead port 2/2 on $mux $procmux$823.
    dead port 2/2 on $mux $procmux$830.
Removed 69 multiplexer ports.
<suppressed ~20 debug messages>

2.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $procmux$1009: { $procmux$1014_CMP $procmux$1013_CMP $auto$opt_reduce.cc:134:opt_pmux$1131 $procmux$1010_CMP }
    Consolidated identical input bits for $mux cell $procmux$795:
      Old ports: A=8'00000000, B=8'11111111, Y=$procmux$795_Y
      New ports: A=1'0, B=1'1, Y=$procmux$795_Y [0]
      New connections: $procmux$795_Y [7:1] = { $procmux$795_Y [0] $procmux$795_Y [0] $procmux$795_Y [0] $procmux$795_Y [0] $procmux$795_Y [0] $procmux$795_Y [0] $procmux$795_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$814:
      Old ports: A=8'00000000, B=8'11111111, Y=$procmux$814_Y
      New ports: A=1'0, B=1'1, Y=$procmux$814_Y [0]
      New connections: $procmux$814_Y [7:1] = { $procmux$814_Y [0] $procmux$814_Y [0] $procmux$814_Y [0] $procmux$814_Y [0] $procmux$814_Y [0] $procmux$814_Y [0] $procmux$814_Y [0] }
    New ctrl vector for $pmux cell $procmux$1017: { $procmux$1015_CMP $procmux$1014_CMP $procmux$1013_CMP $procmux$1012_CMP $procmux$1011_CMP $auto$opt_reduce.cc:134:opt_pmux$1135 $procmux$1010_CMP $auto$opt_reduce.cc:134:opt_pmux$1133 }
    Consolidated identical input bits for $mux cell $procmux$548:
      Old ports: A=8'00000000, B=8'11111111, Y=$procmux$548_Y
      New ports: A=1'0, B=1'1, Y=$procmux$548_Y [0]
      New connections: $procmux$548_Y [7:1] = { $procmux$548_Y [0] $procmux$548_Y [0] $procmux$548_Y [0] $procmux$548_Y [0] $procmux$548_Y [0] $procmux$548_Y [0] $procmux$548_Y [0] }
    New ctrl vector for $pmux cell $procmux$1029: { $auto$opt_reduce.cc:134:opt_pmux$1139 $auto$opt_reduce.cc:134:opt_pmux$1137 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$610:
      Old ports: A=8'00000000, B=$7$memwr$\data_vector$top.v:240$383_EN[7:0]$465, Y=$procmux$610_Y
      New ports: A=1'0, B=$procmux$548_Y [0], Y=$procmux$610_Y [0]
      New connections: $procmux$610_Y [7:1] = { $procmux$610_Y [0] $procmux$610_Y [0] $procmux$610_Y [0] $procmux$610_Y [0] $procmux$610_Y [0] $procmux$610_Y [0] $procmux$610_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$845:
      Old ports: A=8'00000000, B=$2$memwr$\command_data$top.v:230$382_EN[7:0]$436, Y=$0$memwr$\command_data$top.v:230$382_EN[7:0]$394
      New ports: A=1'0, B=$procmux$795_Y [0], Y=$0$memwr$\command_data$top.v:230$382_EN[7:0]$394 [0]
      New connections: $0$memwr$\command_data$top.v:230$382_EN[7:0]$394 [7:1] = { $0$memwr$\command_data$top.v:230$382_EN[7:0]$394 [0] $0$memwr$\command_data$top.v:230$382_EN[7:0]$394 [0] $0$memwr$\command_data$top.v:230$382_EN[7:0]$394 [0] $0$memwr$\command_data$top.v:230$382_EN[7:0]$394 [0] $0$memwr$\command_data$top.v:230$382_EN[7:0]$394 [0] $0$memwr$\command_data$top.v:230$382_EN[7:0]$394 [0] $0$memwr$\command_data$top.v:230$382_EN[7:0]$394 [0] }
    Consolidated identical input bits for $mux cell $procmux$855:
      Old ports: A=8'00000000, B=$2$memwr$\command_data$top.v:212$381_EN[7:0]$431, Y=$0$memwr$\command_data$top.v:212$381_EN[7:0]$391
      New ports: A=1'0, B=$procmux$814_Y [0], Y=$0$memwr$\command_data$top.v:212$381_EN[7:0]$391 [0]
      New connections: $0$memwr$\command_data$top.v:212$381_EN[7:0]$391 [7:1] = { $0$memwr$\command_data$top.v:212$381_EN[7:0]$391 [0] $0$memwr$\command_data$top.v:212$381_EN[7:0]$391 [0] $0$memwr$\command_data$top.v:212$381_EN[7:0]$391 [0] $0$memwr$\command_data$top.v:212$381_EN[7:0]$391 [0] $0$memwr$\command_data$top.v:212$381_EN[7:0]$391 [0] $0$memwr$\command_data$top.v:212$381_EN[7:0]$391 [0] $0$memwr$\command_data$top.v:212$381_EN[7:0]$391 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$664:
      Old ports: A=$6$memwr$\data_vector$top.v:240$383_EN[7:0]$461, B=8'00000000, Y=$procmux$664_Y
      New ports: A=$procmux$610_Y [0], B=1'0, Y=$procmux$664_Y [0]
      New connections: $procmux$664_Y [7:1] = { $procmux$664_Y [0] $procmux$664_Y [0] $procmux$664_Y [0] $procmux$664_Y [0] $procmux$664_Y [0] $procmux$664_Y [0] $procmux$664_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$709:
      Old ports: A=$5$memwr$\data_vector$top.v:240$383_EN[7:0]$456, B=8'00000000, Y=$procmux$709_Y
      New ports: A=$procmux$664_Y [0], B=1'0, Y=$procmux$709_Y [0]
      New connections: $procmux$709_Y [7:1] = { $procmux$709_Y [0] $procmux$709_Y [0] $procmux$709_Y [0] $procmux$709_Y [0] $procmux$709_Y [0] $procmux$709_Y [0] $procmux$709_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$745:
      Old ports: A=$4$memwr$\data_vector$top.v:240$383_EN[7:0]$450, B=8'00000000, Y=$procmux$745_Y
      New ports: A=$procmux$709_Y [0], B=1'0, Y=$procmux$745_Y [0]
      New connections: $procmux$745_Y [7:1] = { $procmux$745_Y [0] $procmux$745_Y [0] $procmux$745_Y [0] $procmux$745_Y [0] $procmux$745_Y [0] $procmux$745_Y [0] $procmux$745_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$777:
      Old ports: A=8'00000000, B=$3$memwr$\data_vector$top.v:240$383_EN[7:0]$445, Y=$procmux$777_Y
      New ports: A=1'0, B=$procmux$745_Y [0], Y=$procmux$777_Y [0]
      New connections: $procmux$777_Y [7:1] = { $procmux$777_Y [0] $procmux$777_Y [0] $procmux$777_Y [0] $procmux$777_Y [0] $procmux$777_Y [0] $procmux$777_Y [0] $procmux$777_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$836:
      Old ports: A=8'00000000, B=$2$memwr$\data_vector$top.v:240$383_EN[7:0]$439, Y=$0$memwr$\data_vector$top.v:240$383_EN[7:0]$397
      New ports: A=1'0, B=$procmux$777_Y [0], Y=$0$memwr$\data_vector$top.v:240$383_EN[7:0]$397 [0]
      New connections: $0$memwr$\data_vector$top.v:240$383_EN[7:0]$397 [7:1] = { $0$memwr$\data_vector$top.v:240$383_EN[7:0]$397 [0] $0$memwr$\data_vector$top.v:240$383_EN[7:0]$397 [0] $0$memwr$\data_vector$top.v:240$383_EN[7:0]$397 [0] $0$memwr$\data_vector$top.v:240$383_EN[7:0]$397 [0] $0$memwr$\data_vector$top.v:240$383_EN[7:0]$397 [0] $0$memwr$\data_vector$top.v:240$383_EN[7:0]$397 [0] $0$memwr$\data_vector$top.v:240$383_EN[7:0]$397 [0] }
  Optimizing cells in module \top.
Performed a total of 14 changes.

2.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

2.11.6. Executing OPT_DFF pass (perform DFF optimizations).

2.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 170 unused wires.
<suppressed ~1 debug messages>

2.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.9. Rerunning OPT passes. (Maybe there is more to do..)

2.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

2.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $procmux$1044: { $procmux$1015_CMP $procmux$1014_CMP $procmux$1013_CMP $procmux$1012_CMP $procmux$1022_CMP $procmux$1021_CMP $procmux$1010_CMP $auto$opt_reduce.cc:134:opt_pmux$1141 }
    New ctrl vector for $pmux cell $procmux$869: $auto$opt_reduce.cc:134:opt_pmux$1143
  Optimizing cells in module \top.
Performed a total of 2 changes.

2.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.11.13. Executing OPT_DFF pass (perform DFF optimizations).

2.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.16. Rerunning OPT passes. (Maybe there is more to do..)

2.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

2.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.11.20. Executing OPT_DFF pass (perform DFF optimizations).

2.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.23. Finished OPT passes. (There is nothing left to do.)

2.12. Executing FSM pass (extract and optimize FSM).

2.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.spi_adr as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.state_spi as FSM state register:
    Register has an initialization value.

2.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$1116 ($dff) from module top (D = $procmux$909_Y, Q = \counter_vector).
Adding EN signal on $procdff$1115 ($dff) from module top (D = $procmux$940_Y, Q = \data_to_send).
Adding EN signal on $procdff$1114 ($dff) from module top (D = $0\counter_send[7:0], Q = \counter_send).
Adding EN signal on $procdff$1113 ($dff) from module top (D = $0\counter_read[7:0], Q = \counter_read).
Adding EN signal on $procdff$1112 ($dff) from module top (D = 1'1, Q = \is_spi_init).
Adding EN signal on $procdff$1111 ($dff) from module top (D = $memrd$\command_data$top.v:254$477_DATA [2:0], Q = \led).
Adding EN signal on $procdff$1110 ($dff) from module top (D = $0\spi_dati[7:0], Q = \spi_dati).
Adding EN signal on $procdff$1109 ($dff) from module top (D = $0\spi_adr[7:0], Q = \spi_adr).
Adding EN signal on $procdff$1108 ($dff) from module top (D = $0\spi_rw[0:0], Q = \spi_rw).
Adding SRST signal on $procdff$1107 ($dff) from module top (D = $procmux$867_Y, Q = \spi_stb, rval = 1'0).
Adding EN signal on $procdff$1106 ($dff) from module top (D = $0\state_spi[7:0], Q = \state_spi).

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 15 unused cells and 15 unused wires.
<suppressed ~16 debug messages>

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

2.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

2.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

2.13.13. Executing OPT_DFF pass (perform DFF optimizations).

2.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

2.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.16. Rerunning OPT passes. (Maybe there is more to do..)

2.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~23 debug messages>

2.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.20. Executing OPT_DFF pass (perform DFF optimizations).

2.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.23. Finished OPT passes. (There is nothing left to do.)

2.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 5 address bits (of 8) from memory init port top.$auto$proc_memwr.cc:45:proc_memwr$1127 (command_data).
Removed top 5 address bits (of 8) from memory init port top.$auto$proc_memwr.cc:45:proc_memwr$1128 (command_data).
Removed top 29 address bits (of 32) from memory read port top.$memrd$\command_data$top.v:234$446 (command_data).
Removed top 29 address bits (of 32) from memory read port top.$memrd$\command_data$top.v:254$477 (command_data).
Removed top 29 bits (of 32) from port B of cell top.$lt$top.v:163$421 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$add$top.v:196$426 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$add$top.v:196$426 ($add).
Removed top 3 bits (of 8) from port B of cell top.$eq$top.v:214$432 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$add$top.v:227$441 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$add$top.v:227$441 ($add).
Removed top 6 bits (of 8) from port B of cell top.$eq$top.v:234$447 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$eq$top.v:236$453 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$eq$top.v:238$458 ($eq).
Removed top 29 bits (of 32) from port B of cell top.$lt$top.v:239$462 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$add$top.v:241$466 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$add$top.v:241$466 ($add).
Removed top 5 bits (of 8) from port B of cell top.$eq$top.v:243$468 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$eq$top.v:250$472 ($eq).
Removed top 5 bits (of 8) from mux cell top.$procmux$851 ($mux).
Removed top 5 bits (of 8) from mux cell top.$procmux$863 ($mux).
Removed top 5 bits (of 8) from port B of cell top.$procmux$1002_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$procmux$1010_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$procmux$1011_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$procmux$1012_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$procmux$1013_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$procmux$1014_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$procmux$1019_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$procmux$1021_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$procmux$1022_CMP0 ($eq).
Removed top 4 bits (of 8) from mux cell top.$procmux$1051 ($mux).
Removed top 4 bits (of 8) from mux cell top.$procmux$1061 ($mux).
Removed top 4 bits (of 8) from mux cell top.$procmux$1064 ($mux).
Removed top 4 bits (of 8) from mux cell top.$procmux$1066 ($mux).
Removed top 5 bits (of 8) from mux cell top.$procmux$807 ($mux).
Removed top 5 bits (of 8) from wire top.$0$memwr$\command_data$top.v:212$381_ADDR[7:0]$389.
Removed top 5 bits (of 8) from wire top.$0$memwr$\command_data$top.v:230$382_ADDR[7:0]$392.
Removed top 5 bits (of 8) from wire top.$2$memwr$\command_data$top.v:212$381_ADDR[7:0]$429.
Removed top 24 bits (of 32) from wire top.$add$top.v:196$426_Y.
Removed top 4 bits (of 8) from wire top.$procmux$1051_Y.
Removed top 4 bits (of 8) from wire top.$procmux$1061_Y.
Removed top 4 bits (of 8) from wire top.$procmux$1064_Y.
Removed top 4 bits (of 8) from wire top.$procmux$1066_Y.

2.15. Executing PEEPOPT pass (run peephole optimizers).

2.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

2.17. Executing SHARE pass (SAT-based resource sharing).

2.18. Executing TECHMAP pass (map to technology primitives).

2.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.18.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~62 debug messages>

2.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.21. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$top.v:196$426 ($add).
  creating $macc model for $add$top.v:227$441 ($add).
  creating $macc model for $add$top.v:241$466 ($add).
  creating $alu model for $macc $add$top.v:241$466.
  creating $alu model for $macc $add$top.v:227$441.
  creating $alu model for $macc $add$top.v:196$426.
  creating $alu model for $lt$top.v:163$421 ($lt): new $alu
  creating $alu model for $lt$top.v:239$462 ($lt): new $alu
  creating $alu cell for $lt$top.v:239$462: $auto$alumacc.cc:485:replace_alu$1242
  creating $alu cell for $lt$top.v:163$421: $auto$alumacc.cc:485:replace_alu$1253
  creating $alu cell for $add$top.v:196$426: $auto$alumacc.cc:485:replace_alu$1264
  creating $alu cell for $add$top.v:227$441: $auto$alumacc.cc:485:replace_alu$1267
  creating $alu cell for $add$top.v:241$466: $auto$alumacc.cc:485:replace_alu$1270
  created 5 $alu and 0 $macc cells.

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6 debug messages>

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~23 debug messages>

2.22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.6. Executing OPT_DFF pass (perform DFF optimizations).

2.22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

2.22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.22.9. Rerunning OPT passes. (Maybe there is more to do..)

2.22.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~23 debug messages>

2.22.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.13. Executing OPT_DFF pass (perform DFF optimizations).

2.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.22.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.22.16. Finished OPT passes. (There is nothing left to do.)

2.23. Executing MEMORY pass.

2.23.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.23.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.23.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing top.command_data write port 0.
  Analyzing top.command_data write port 1.
  Analyzing top.data_vector write port 0.

2.23.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.23.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\command_data'[0] in module `\top': merging output FF to cell.
    Write port 0: don't care on collision.
    Write port 1: don't care on collision.
Checking read port `\command_data'[1] in module `\top': no output FF found.
Checking read port `\data_vector'[0] in module `\top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port address `\command_data'[1] in module `\top': no address FF found.
Checking read port address `\data_vector'[0] in module `\top': address FF has fully-defined init value, not supported.

2.23.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

2.23.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory top.command_data by address:
Consolidating write ports of memory top.command_data by address:
  Merging ports 0, 1 (address \counter_read [2:0]).

2.23.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.23.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

2.23.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.25. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.command_data
using FF mapping for memory top.data_vector
<suppressed ~40 debug messages>

2.26. Executing TECHMAP pass (map to technology primitives).

2.26.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

2.26.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

2.26.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.27. Executing ICE40_BRAMINIT pass.

2.28. Executing OPT pass (performing simple optimizations).

2.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~48 debug messages>

2.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.28.3. Executing OPT_DFF pass (perform DFF optimizations).

2.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 41 unused wires.
<suppressed ~2 debug messages>

2.28.5. Finished fast OPT passes.

2.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \command_data in module \top:
  created 8 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of top.command_data: $\command_data$rdreg[0]
  read interface: 1 $dff and 14 $mux cells.
  write interface: 8 write mux blocks.
Mapping memory \data_vector in module \top:
  created 16 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 16 write mux blocks.

2.30. Executing OPT pass (performing simple optimizations).

2.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~28 debug messages>

2.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

2.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $procmux$1017:
      Old ports: A=8'00001000, B=56'00001001000010100000101100001111000011000000110100001110, Y=$0\spi_adr[7:0]
      New ports: A=3'000, B=21'001010011111100101110, Y=$0\spi_adr[7:0] [2:0]
      New connections: $0\spi_adr[7:0] [7:3] = 5'00001
    Consolidated identical input bits for $pmux cell $procmux$1044:
      Old ports: A=8'00000001, B={ 28'0000001000000011000001000000 $auto$wreduce.cc:461:run$1238 [3:0] 12'000010110000 $auto$wreduce.cc:461:run$1235 [3:0] 8'00000101 }, Y=$0\state_spi[7:0]
      New ports: A=4'0001, B={ 12'001000110100 $auto$wreduce.cc:461:run$1238 [3:0] 4'1011 $auto$wreduce.cc:461:run$1235 [3:0] 4'0101 }, Y=$0\state_spi[7:0] [3:0]
      New connections: $0\state_spi[7:0] [7:4] = 4'0000
    Consolidated identical input bits for $mux cell $procmux$1051:
      Old ports: A=4'1000, B=4'0110, Y=$auto$wreduce.cc:461:run$1235 [3:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:461:run$1235 [3] $auto$wreduce.cc:461:run$1235 [1] }
      New connections: { $auto$wreduce.cc:461:run$1235 [2] $auto$wreduce.cc:461:run$1235 [0] } = { $auto$wreduce.cc:461:run$1235 [1] 1'0 }
    Consolidated identical input bits for $mux cell $procmux$1061:
      Old ports: A=4'0101, B=4'1000, Y=$auto$wreduce.cc:461:run$1236 [3:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:461:run$1236 [3] $auto$wreduce.cc:461:run$1236 [0] }
      New connections: $auto$wreduce.cc:461:run$1236 [2:1] = { $auto$wreduce.cc:461:run$1236 [0] 1'0 }
    Consolidated identical input bits for $mux cell $procmux$1064:
      Old ports: A=4'1010, B=4'0110, Y=$auto$wreduce.cc:461:run$1237 [3:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:461:run$1237 [3:2]
      New connections: $auto$wreduce.cc:461:run$1237 [1:0] = 2'10
    New ctrl vector for $pmux cell $procmux$953: $auto$opt_reduce.cc:134:opt_pmux$1642
    New ctrl vector for $pmux cell $procmux$971: $procmux$1002_CMP
  Optimizing cells in module \top.
Performed a total of 7 changes.

2.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

2.30.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$1179 ($dffe) from module top (D = $add$top.v:227$441_Y [7:0], Q = \counter_read, rval = 8'00000000).
Adding SRST signal on $auto$ff.cc:266:slice$1164 ($dffe) from module top (D = $add$top.v:196$426_Y, Q = \counter_send, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$1144 ($dffe) from module top (D = $add$top.v:241$466_Y [3:0], Q = \counter_vector).

2.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 31 unused cells and 109 unused wires.
<suppressed ~38 debug messages>

2.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.30.9. Rerunning OPT passes. (Maybe there is more to do..)

2.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

2.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$1653: { $auto$rtlil.cc:2446:Not$1152 $auto$rtlil.cc:2446:Not$1150 $procmux$1002_CMP $auto$rtlil.cc:2446:Not$1651 $auto$opt_dff.cc:194:make_patterns_logic$1145 $auto$rtlil.cc:2446:Not$1148 \spi_ack }
  Optimizing cells in module \top.
Performed a total of 1 changes.

2.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

2.30.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\data_vector[9]$1454 ($dff) from module top (D = \spi_dato, Q = \data_vector[9]).
Adding EN signal on $memory\data_vector[8]$1452 ($dff) from module top (D = \spi_dato, Q = \data_vector[8]).
Adding EN signal on $memory\data_vector[7]$1450 ($dff) from module top (D = \spi_dato, Q = \data_vector[7]).
Adding EN signal on $memory\data_vector[6]$1448 ($dff) from module top (D = \spi_dato, Q = \data_vector[6]).
Adding EN signal on $memory\data_vector[5]$1446 ($dff) from module top (D = \spi_dato, Q = \data_vector[5]).
Adding EN signal on $memory\data_vector[4]$1444 ($dff) from module top (D = \spi_dato, Q = \data_vector[4]).
Adding EN signal on $memory\data_vector[3]$1442 ($dff) from module top (D = \spi_dato, Q = \data_vector[3]).
Adding EN signal on $memory\data_vector[2]$1440 ($dff) from module top (D = \spi_dato, Q = \data_vector[2]).
Adding EN signal on $memory\data_vector[1]$1438 ($dff) from module top (D = \spi_dato, Q = \data_vector[1]).
Adding EN signal on $memory\data_vector[15]$1466 ($dff) from module top (D = \spi_dato, Q = \data_vector[15]).
Adding EN signal on $memory\data_vector[14]$1464 ($dff) from module top (D = \spi_dato, Q = \data_vector[14]).
Adding EN signal on $memory\data_vector[13]$1462 ($dff) from module top (D = \spi_dato, Q = \data_vector[13]).
Adding EN signal on $memory\data_vector[12]$1460 ($dff) from module top (D = \spi_dato, Q = \data_vector[12]).
Adding EN signal on $memory\data_vector[11]$1458 ($dff) from module top (D = \spi_dato, Q = \data_vector[11]).
Adding EN signal on $memory\data_vector[10]$1456 ($dff) from module top (D = \spi_dato, Q = \data_vector[10]).
Adding EN signal on $memory\data_vector[0]$1436 ($dff) from module top (D = \spi_dato, Q = \data_vector[0]).
Adding EN signal on $memory\command_data[1]$1309 ($dff) from module top (D = \spi_dato, Q = \command_data[1]).
Adding EN signal on $memory\command_data[0]$1307 ($dff) from module top (D = \spi_dato, Q = \command_data[0]).
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$1201 ($dffe) from module top.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$1201 ($dffe) from module top.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$1201 ($dffe) from module top.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$1201 ($dffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$1208 ($dffe) from module top.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$1208 ($dffe) from module top.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$1208 ($dffe) from module top.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$1208 ($dffe) from module top.

2.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 19 unused cells and 20 unused wires.
<suppressed ~20 debug messages>

2.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.30.16. Rerunning OPT passes. (Maybe there is more to do..)

2.30.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

2.30.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.30.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.20. Executing OPT_DFF pass (perform DFF optimizations).

2.30.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.30.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.30.23. Finished OPT passes. (There is nothing left to do.)

2.31. Executing ICE40_WRAPCARRY pass (wrap carries).

2.32. Executing TECHMAP pass (map to technology primitives).

2.32.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.32.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.32.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $and.
Using template $paramod$fa8d9e4c2749d63ae521a69564d54ead1ad1232d\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$a285b5a57fe61eabc57c91b8c412748ee1151a85\_90_pmux for cells of type $pmux.
Using template $paramod$33afdd83bf3811dac2de7a968d39eea5718691bc\_90_pmux for cells of type $pmux.
Using template $paramod$e82bc780abe45b949d821aa3d0d92433ac3b9e09\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~453 debug messages>

2.33. Executing OPT pass (performing simple optimizations).

2.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~357 debug messages>

2.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~333 debug messages>
Removed a total of 111 cells.

2.33.3. Executing OPT_DFF pass (perform DFF optimizations).

2.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 16 unused cells and 344 unused wires.
<suppressed ~17 debug messages>

2.33.5. Finished fast OPT passes.

2.34. Executing ICE40_OPT pass (performing simple optimizations).

2.34.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1242.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1242.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1253.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1253.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1264.slice[0].carry: CO=\counter_send [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1267.slice[0].carry: CO=\counter_read [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1270.slice[0].carry: CO=\counter_vector [0]

2.34.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

2.34.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.34.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$2851 ($_DFFE_PP_) from module top (D = $procmux$1009.B_AND_S [7], Q = \spi_dati [7], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$2850 ($_DFFE_PP_) from module top (D = $procmux$1009.B_AND_S [6], Q = \spi_dati [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$2849 ($_DFFE_PP_) from module top (D = $procmux$1009.B_AND_S [5], Q = \spi_dati [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$2848 ($_DFFE_PP_) from module top (D = $procmux$1009.B_AND_S [4], Q = \spi_dati [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$2847 ($_DFFE_PP_) from module top (D = $procmux$1009.B_AND_S [3], Q = \spi_dati [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$2846 ($_DFFE_PP_) from module top (D = $procmux$1009.B_AND_S [2], Q = \spi_dati [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$2845 ($_DFFE_PP_) from module top (D = $procmux$1009.B_AND_S [1], Q = \spi_dati [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$2844 ($_DFFE_PP_) from module top (D = $procmux$1009.Y_B [0], Q = \spi_dati [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$2843 ($_DFFE_PP_) from module top (D = $procmux$1044.Y_B [3], Q = \state_spi [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$2842 ($_DFFE_PP_) from module top (D = $procmux$1044.Y_B [2], Q = \state_spi [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$2841 ($_DFFE_PP_) from module top (D = $procmux$1044.Y_B [1], Q = \state_spi [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$2840 ($_DFFE_PP_) from module top (D = $procmux$1044.Y_B [0], Q = \state_spi [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$2136 ($_DFFE_PP_) from module top (D = $procmux$1017.Y_B [2], Q = \spi_adr [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$2135 ($_DFFE_PP_) from module top (D = $procmux$1017.Y_B [1], Q = \spi_adr [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$2134 ($_DFFE_PP_) from module top (D = $procmux$1017.Y_B [0], Q = \spi_adr [0], rval = 1'0).

2.34.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 21 unused cells and 8 unused wires.
<suppressed ~22 debug messages>

2.34.6. Rerunning OPT passes. (Removed registers in this run.)

2.34.7. Running ICE40 specific optimizations.

2.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.34.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.34.10. Executing OPT_DFF pass (perform DFF optimizations).

2.34.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.34.12. Finished OPT passes. (There is nothing left to do.)

2.35. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.36. Executing TECHMAP pass (map to technology primitives).

2.36.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.36.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
No more expansions possible.
<suppressed ~211 debug messages>

2.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$1264.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1267.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1270.slice[0].carry ($lut).

2.39. Executing ICE40_OPT pass (performing simple optimizations).

2.39.1. Running ICE40 specific optimizations.

2.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~53 debug messages>

2.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

2.39.4. Executing OPT_DFF pass (perform DFF optimizations).

2.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1000 unused wires.
<suppressed ~1 debug messages>

2.39.6. Rerunning OPT passes. (Removed registers in this run.)

2.39.7. Running ICE40 specific optimizations.

2.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.39.10. Executing OPT_DFF pass (perform DFF optimizations).

2.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.39.12. Finished OPT passes. (There is nothing left to do.)

2.40. Executing TECHMAP pass (map to technology primitives).

2.40.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.40.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.41. Executing ABC pass (technology mapping using ABC).

2.41.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 481 gates and 666 wires to a netlist network with 183 inputs and 79 outputs.

2.41.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     112.
ABC: Participating nodes from both networks       =     256.
ABC: Participating nodes from the first network   =     115. (  48.52 % of nodes)
ABC: Participating nodes from the second network  =     141. (  59.49 % of nodes)
ABC: Node pairs (any polarity)                    =     115. (  48.52 % of names can be moved)
ABC: Node pairs (same polarity)                   =     105. (  44.30 % of names can be moved)
ABC: Total runtime =     0.04 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      236
ABC RESULTS:        internal signals:      404
ABC RESULTS:           input signals:      183
ABC RESULTS:          output signals:       79
Removing temp directory.

2.42. Executing ICE40_WRAPCARRY pass (wrap carries).

2.43. Executing TECHMAP pass (map to technology primitives).

2.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 16 unused cells and 458 unused wires.

2.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      252
  1-LUT               23
  2-LUT               26
  3-LUT               64
  4-LUT              139
  with \SB_CARRY    (#0)   14
  with \SB_CARRY    (#1)   16

Eliminating LUTs.
Number of LUTs:      252
  1-LUT               23
  2-LUT               26
  3-LUT               64
  4-LUT              139
  with \SB_CARRY    (#0)   14
  with \SB_CARRY    (#1)   16

Combining LUTs.
Number of LUTs:      252
  1-LUT               23
  2-LUT               26
  3-LUT               64
  4-LUT              139
  with \SB_CARRY    (#0)   14
  with \SB_CARRY    (#1)   16

Eliminated 0 LUTs.
Combined 0 LUTs.
<suppressed ~1394 debug messages>

2.45. Executing TECHMAP pass (map to technology primitives).

2.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$6382f7860648fdb6f8a8dc690c25a62882cc501b\$lut for cells of type $lut.
Using template $paramod$9e45b1a8f5d89c07bcbb75a2bb1c598231b04feb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$0a94662b0161fc067fc2a1123fd5ac94da2ec1db\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$243c00f5eb9faa1d5ce3478fdc389a56070781f8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$adac5163f2ca606e303e4fcb6e4ac1a8cfe9825d\$lut for cells of type $lut.
Using template $paramod$cc14edb43bcbbd83b718cef08414cb23048bb6d0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$d2e6d37235ab843778c678747f5760d5e87de899\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101100 for cells of type $lut.
Using template $paramod$ef26adabe6060e01077b576cfe34e95e55a26aef\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$18b36052d36cf72729de86cdac9ca94acc9d989c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$4972722c284f07fee673f7cb99e6a36ce4a244f0\$lut for cells of type $lut.
Using template $paramod$b0305aca02e3fbd35ad190b18b88a4c4c0c3abd4\$lut for cells of type $lut.
Using template $paramod$4d7c19975374706dcdf71108a7787595b7973c01\$lut for cells of type $lut.
Using template $paramod$017d8c8b5f8f0bd543e7b1e7d026dcb67424a519\$lut for cells of type $lut.
Using template $paramod$987693cbecb4a281b23724d472f575ceae2391bd\$lut for cells of type $lut.
Using template $paramod$164bdefb5d1c06a6528ecdb35b429071950e50d7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod$f78385c6d231680e70282f8c06e3ec91f486e763\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$ad823946862e656cf7f96d606b18b8f972dc6d6c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$e916f29461b84dba3e4f29f50c50271deb94400b\$lut for cells of type $lut.
Using template $paramod$b5d963136d3588f7360944bb0c8e3b23c02f430e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$81e664e9cfefc2d541f16a6e402181426ad4afbe\$lut for cells of type $lut.
Using template $paramod$9d53d1c8974e3863645d160da18ba6deff54db12\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~1022 debug messages>
Removed 0 unused cells and 580 unused wires.

2.46. Executing AUTONAME pass.
Renamed 6024 objects in module top (35 iterations).
<suppressed ~610 debug messages>

2.47. Executing HIERARCHY pass (managing design hierarchy).

2.47.1. Analyzing design hierarchy..
Top module:  \top

2.47.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.48. Printing statistics.

=== top ===

   Number of wires:                187
   Number of wire bits:            715
   Number of public wires:         187
   Number of public wire bits:     715
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                469
     SB_CARRY                       27
     SB_DFFE                       157
     SB_DFFESR                      29
     SB_DFFESS                       2
     SB_DFFSR                        1
     SB_LUT4                       252
     SB_SPI                          1

2.49. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.50. Executing JSON backend.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 957001f237, CPU: user 1.68s system 0.02s, MEM: 25.00 MB peak
Yosys 0.33+79 (git sha1 b52f6cb19, gcc 12.2.0-14 -fPIC -Os)
Time spent: 28% 13x read_verilog (0 sec), 20% 1x abc (0 sec), ...
nextpnr-ice40 --up5k --package sg48 --json top.json --pcf pico-ice.pcf --asc top.asc
Info: constrained 'CLK' to bel 'X12/Y31/io1'
Info: constrained 'SPI_MOSI' to bel 'X23/Y0/io1'
Info: constrained 'SPI_MISO' to bel 'X23/Y0/io0'
Info: constrained 'SPI_SCK' to bel 'X24/Y0/io0'
Info: constrained 'SPI_SS' to bel 'X24/Y0/io1'
Info: constrained 'LED_G' to bel 'X4/Y31/io0'
Info: constrained 'LED_B' to bel 'X5/Y31/io0'
Info: constrained 'LED_R' to bel 'X6/Y31/io0'

Info: Packing constants..
Info: Packing IOs..
Info: Packing LUT-FFs..
Info:      208 LCs used as LUT4 only
Info:       44 LCs used as LUT4 and DFF
Info: Packing non-LUT FFs..
Info:      145 LCs used as DFF only
Info: Packing carries..
Info:       16 LCs used as CARRY only
Info: Packing indirect carry+LUT pairs...
Info:       13 LUTs merged into carry LCs
Info: Packing RAMs..
Info: Placing PLLs..
Info: Packing special functions..
Info:   constrained SB_SPI 'SB_SPI_inst' to X0/Y0/spi_0
Info: Packing PLLs..
Info: Promoting globals..
Info: promoting CLK$SB_IO_IN (fanout 189)
Info: Constraining chains...
Info:        5 LCs used to legalise carry chains.
Info: Checksum: 0x813c8b15

Info: Device utilisation:
Info: 	         ICESTORM_LC:   407/ 5280     7%
Info: 	        ICESTORM_RAM:     0/   30     0%
Info: 	               SB_IO:     8/   96     8%
Info: 	               SB_GB:     1/    8    12%
Info: 	        ICESTORM_PLL:     0/    1     0%
Info: 	         SB_WARMBOOT:     0/    1     0%
Info: 	        ICESTORM_DSP:     0/    8     0%
Info: 	      ICESTORM_HFOSC:     0/    1     0%
Info: 	      ICESTORM_LFOSC:     0/    1     0%
Info: 	              SB_I2C:     0/    2     0%
Info: 	              SB_SPI:     1/    2    50%
Info: 	              IO_I3C:     0/    2     0%
Info: 	         SB_LEDDA_IP:     0/    1     0%
Info: 	         SB_RGBA_DRV:     0/    1     0%
Info: 	      ICESTORM_SPRAM:     0/    4     0%

Info: Placed 9 cells based on constraints.
Info: Creating initial analytic placement for 376 cells, random placement wirelen = 9507.
Info:     at initial placer iter 0, wirelen = 250
Info:     at initial placer iter 1, wirelen = 250
Info:     at initial placer iter 2, wirelen = 250
Info:     at initial placer iter 3, wirelen = 250
Info: Running main analytical placer, max placement attempts per cell = 21736.
Info:     at iteration #1, type ALL: wirelen solved = 250, spread = 2242, legal = 2625; time = 0.01s
Info:     at iteration #2, type ALL: wirelen solved = 253, spread = 1637, legal = 2330; time = 0.02s
Info:     at iteration #3, type ALL: wirelen solved = 298, spread = 1680, legal = 2138; time = 0.02s
Info:     at iteration #4, type ALL: wirelen solved = 377, spread = 1460, legal = 2070; time = 0.02s
Info:     at iteration #5, type ALL: wirelen solved = 422, spread = 1404, legal = 2091; time = 0.01s
Info:     at iteration #6, type ALL: wirelen solved = 438, spread = 1295, legal = 1994; time = 0.01s
Info:     at iteration #7, type ALL: wirelen solved = 443, spread = 1190, legal = 1662; time = 0.01s
Info:     at iteration #8, type ALL: wirelen solved = 496, spread = 1291, legal = 1580; time = 0.01s
Info:     at iteration #9, type ALL: wirelen solved = 513, spread = 1308, legal = 1718; time = 0.01s
Info:     at iteration #10, type ALL: wirelen solved = 545, spread = 1200, legal = 1488; time = 0.01s
Info:     at iteration #11, type ALL: wirelen solved = 572, spread = 1173, legal = 1594; time = 0.01s
Info:     at iteration #12, type ALL: wirelen solved = 538, spread = 1206, legal = 1708; time = 0.01s
Info:     at iteration #13, type ALL: wirelen solved = 553, spread = 1194, legal = 1687; time = 0.01s
Info:     at iteration #14, type ALL: wirelen solved = 615, spread = 1179, legal = 1524; time = 0.01s
Info:     at iteration #15, type ALL: wirelen solved = 652, spread = 1181, legal = 1444; time = 0.01s
Info:     at iteration #16, type ALL: wirelen solved = 648, spread = 1105, legal = 1642; time = 0.01s
Info:     at iteration #17, type ALL: wirelen solved = 632, spread = 1115, legal = 1408; time = 0.01s
Info:     at iteration #18, type ALL: wirelen solved = 644, spread = 1155, legal = 1474; time = 0.01s
Info:     at iteration #19, type ALL: wirelen solved = 655, spread = 1204, legal = 1546; time = 0.01s
Info:     at iteration #20, type ALL: wirelen solved = 707, spread = 1191, legal = 1505; time = 0.01s
Info:     at iteration #21, type ALL: wirelen solved = 699, spread = 1110, legal = 1641; time = 0.01s
Info:     at iteration #22, type ALL: wirelen solved = 672, spread = 1187, legal = 1471; time = 0.01s
Info: HeAP Placer Time: 0.38s
Info:   of which solving equations: 0.22s
Info:   of which spreading cells: 0.02s
Info:   of which strict legalisation: 0.07s

Info: Running simulated annealing placer for refinement.
Info:   at iteration #1: temp = 0.000000, timing cost = 657, wirelen = 1408
Info:   at iteration #5: temp = 0.000000, timing cost = 517, wirelen = 1235
Info:   at iteration #10: temp = 0.000000, timing cost = 521, wirelen = 1160
Info:   at iteration #15: temp = 0.000000, timing cost = 501, wirelen = 1140
Info:   at iteration #20: temp = 0.000000, timing cost = 485, wirelen = 1130
Info:   at iteration #20: temp = 0.000000, timing cost = 484, wirelen = 1130 
Info: SA placement time 0.24s

Info: Max frequency for clock 'CLK$SB_IO_IN_$glb_clk': 45.13 MHz (PASS at 12.00 MHz)

Info: Max frequency for posedge CLK$SB_IO_IN          -> posedge CLK$SB_IO_IN_$glb_clk: 62.32 MHz (PASS at 12.00 MHz)
Info: Max frequency for posedge CLK$SB_IO_IN_$glb_clk -> posedge CLK$SB_IO_IN         : 126.39 MHz (PASS at 12.00 MHz)

Info: Clock to clock delay posedge CLK$SB_IO_IN_$glb_clk -> posedge CLK$SB_IO_IN         : -1.59 ns
Info: Clock to clock delay posedge CLK$SB_IO_IN          -> posedge CLK$SB_IO_IN_$glb_clk: 1.59 ns

Info: Clock 'CLK$SB_IO_IN' has no interior paths

Info: Max delay <async>                       -> posedge CLK$SB_IO_IN         : 7.02 ns
Info: Max delay posedge CLK$SB_IO_IN          -> <async>                      : 6.89 ns
Info: Max delay posedge CLK$SB_IO_IN          -> posedge CLK$SB_IO_IN_$glb_clk: 17.63 ns
Info: Max delay posedge CLK$SB_IO_IN_$glb_clk -> <async>                      : 10.43 ns
Info: Max delay posedge CLK$SB_IO_IN_$glb_clk -> posedge CLK$SB_IO_IN         : 6.32 ns

Info: Slack histogram:
Info:  legend: * represents 1 endpoint(s)
Info:          + represents [1,1) endpoint(s)
Info: [ 61175,  62085) |********************+
Info: [ 62085,  62995) |************************************************************ 
Info: [ 62995,  63905) |*+
Info: [ 63905,  64815) |******************************+
Info: [ 64815,  65725) |*******+
Info: [ 65725,  66635) | 
Info: [ 66635,  67545) |***********************+
Info: [ 67545,  68455) |*+
Info: [ 68455,  69365) |**+
Info: [ 69365,  70275) |*******************+
Info: [ 70275,  71185) |*********+
Info: [ 71185,  72095) |******+
Info: [ 72095,  73005) |*****+
Info: [ 73005,  73915) |******+
Info: [ 73915,  74825) | 
Info: [ 74825,  75735) | 
Info: [ 75735,  76645) |*********************+
Info: [ 76645,  77555) |*****************+
Info: [ 77555,  78465) |************+
Info: [ 78465,  79375) |*******************************+
Info: Checksum: 0x8c23e0a0

Info: Routing..
Info: Setting up routing queue.
Info: Routing 1180 arcs.
Info:            |   (re-)routed arcs  |   delta    | remaining|       time spent     |
Info:    IterCnt |  w/ripup   wo/ripup |  w/r  wo/r |      arcs| batch(sec) total(sec)|
Info:       1000 |      223        770 |  223   770 |       489|       0.65       0.65|
Info:       1881 |      542       1312 |  319   542 |         0|       0.54       1.19|
Info: Routing complete.
Info: Router1 time 1.19s
Info: Checksum: 0x4a75637b

Info: Critical path report for clock 'CLK$SB_IO_IN_$glb_clk' (posedge -> posedge):
Info: curr total
Info:  1.4  1.4  Source counter_read_SB_DFFESR_Q_D_SB_LUT4_O_2_LC.O
Info:  1.8  3.2    Net counter_read[5] (1,5) -> (2,6)
Info:                Sink command_data[1]_SB_DFFE_Q_E_SB_LUT4_O_I3_SB_LUT4_I2_I3_SB_LUT4_O_1_LC.I1
Info:                Defined in:
Info:                  top.v:227.29-227.45
Info:                  /usr/local/bin/../share/yosys/ice40/arith_map.v:33.23-33.24
Info:  1.2  4.4  Source command_data[1]_SB_DFFE_Q_E_SB_LUT4_O_I3_SB_LUT4_I2_I3_SB_LUT4_O_1_LC.O
Info:  1.8  6.1    Net command_data[1]_SB_DFFE_Q_E_SB_LUT4_O_I3_SB_LUT4_I2_I3[2] (2,6) -> (2,6)
Info:                Sink led_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_O_I1_SB_LUT4_O_LC.I2
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ice40/cells_map.v:6.21-6.22
Info:  1.2  7.3  Source led_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_O_I1_SB_LUT4_O_LC.O
Info:  1.8  9.1    Net led_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_O_I1[2] (2,6) -> (1,6)
Info:                Sink led_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_O_I1_SB_LUT4_I2_LC.I2
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ice40/cells_map.v:6.21-6.22
Info:  1.2 10.3  Source led_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_O_I1_SB_LUT4_I2_LC.O
Info:  3.0 13.3    Net led_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_O_I1_SB_LUT4_I2_O[0] (1,6) -> (4,5)
Info:                Sink counter_vector_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_I2_O_SB_LUT4_O_1_LC.I2
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ice40/cells_map.v:6.21-6.22
Info:  1.2 14.5  Source counter_vector_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_I2_O_SB_LUT4_O_1_LC.O
Info:  3.0 17.4    Net counter_vector_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_I2_O[0] (4,5) -> (8,8)
Info:                Sink data_vector[4]_SB_DFFE_Q_E_SB_LUT4_O_LC.I0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ice40/cells_map.v:6.21-6.22
Info:  1.3 18.7  Source data_vector[4]_SB_DFFE_Q_E_SB_LUT4_O_LC.O
Info:  3.6 22.3    Net data_vector[4]_SB_DFFE_Q_E (8,8) -> (9,7)
Info:                Sink data_vector[4]_SB_DFFE_Q_6_DFFLC.CEN
Info:  0.1 22.4  Setup data_vector[4]_SB_DFFE_Q_6_DFFLC.CEN
Info: 7.6 ns logic, 14.8 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge CLK$SB_IO_IN':
Info: curr total
Info:  0.0  0.0  Source SPI_MOSI$sb_io.D_IN_0
Info:  8.2  8.2    Net SPI_MOSI$SB_IO_IN (23,0) -> (0,0)
Info:                Sink SB_SPI_inst.SI
Info:                Defined in:
Info:                  top.v:9.101-9.109
Info:  1.5  9.7  Setup SB_SPI_inst.SI
Info: 1.5 ns logic, 8.2 ns routing

Info: Critical path report for cross-domain path 'posedge CLK$SB_IO_IN' -> '<async>':
Info: curr total
Info:  1.5  1.5  Source SB_SPI_inst.SO
Info:  7.6  9.1    Net SPI_MISO$SB_IO_OUT (0,0) -> (23,0)
Info:                Sink SPI_MISO$sb_io.D_OUT_0
Info:                Defined in:
Info:                  top.v:9.118-9.126
Info: 1.5 ns logic, 7.6 ns routing

Info: Critical path report for cross-domain path 'posedge CLK$SB_IO_IN' -> 'posedge CLK$SB_IO_IN_$glb_clk':
Info: curr total
Info:  1.5  1.5  Source SB_SPI_inst.SBDATO1
Info:  5.0  6.5    Net data_to_send_SB_DFFE_Q_7_D_SB_LUT4_O_I1_SB_LUT4_O_I3_SB_LUT4_I3_I1[2] (0,0) -> (1,1)
Info:                Sink is_spi_init_SB_DFFE_Q_E_SB_LUT4_O_I2_SB_LUT4_O_1_I3_SB_LUT4_O_I1_SB_LUT4_O_LC.I0
Info:                Defined in:
Info:                  top.v:30.15-30.23
Info:  1.3  7.8  Source is_spi_init_SB_DFFE_Q_E_SB_LUT4_O_I2_SB_LUT4_O_1_I3_SB_LUT4_O_I1_SB_LUT4_O_LC.O
Info:  1.8  9.5    Net is_spi_init_SB_DFFE_Q_E_SB_LUT4_O_I2_SB_LUT4_O_1_I3_SB_LUT4_O_I1[1] (1,1) -> (1,1)
Info:                Sink is_spi_init_SB_DFFE_Q_E_SB_LUT4_O_I2_SB_LUT4_O_1_I3_SB_LUT4_O_LC.I1
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ice40/cells_map.v:6.21-6.22
Info:  1.2 10.8  Source is_spi_init_SB_DFFE_Q_E_SB_LUT4_O_I2_SB_LUT4_O_1_I3_SB_LUT4_O_LC.O
Info:  1.8 12.5    Net is_spi_init_SB_DFFE_Q_E_SB_LUT4_O_I2_SB_LUT4_O_1_I3[2] (1,1) -> (1,2)
Info:                Sink is_spi_init_SB_DFFE_Q_E_SB_LUT4_O_I2_SB_LUT4_O_1_LC.I3
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ice40/cells_map.v:6.21-6.22
Info:  0.9 13.4  Source is_spi_init_SB_DFFE_Q_E_SB_LUT4_O_I2_SB_LUT4_O_1_LC.O
Info:  1.8 15.2    Net is_spi_init_SB_DFFE_Q_E_SB_LUT4_O_I2[2] (1,2) -> (1,3)
Info:                Sink led_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_I1_I2_SB_LUT4_O_1_LC.I3
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ice40/cells_map.v:6.21-6.22
Info:  0.9 16.0  Source led_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_I1_I2_SB_LUT4_O_1_LC.O
Info:  1.8 17.8    Net led_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_I1_I2[3] (1,3) -> (1,4)
Info:                Sink led_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_I1_I2_SB_LUT4_I2_LC.I2
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ice40/cells_map.v:6.21-6.22
Info:  1.2 19.0  Source led_SB_DFFE_Q_E_SB_LUT4_O_I1_SB_LUT4_I1_I2_SB_LUT4_I2_LC.O
Info:  3.1 22.1    Net counter_read_SB_DFFESR_Q_E (1,4) -> (1,5)
Info:                Sink counter_read_SB_DFFESR_Q_D_SB_LUT4_O_LC.CEN
Info:  0.1 22.2  Setup counter_read_SB_DFFESR_Q_D_SB_LUT4_O_LC.CEN
Info: 7.1 ns logic, 15.1 ns routing

Info: Critical path report for cross-domain path 'posedge CLK$SB_IO_IN_$glb_clk' -> '<async>':
Info: curr total
Info:  1.4  1.4  Source led_SB_DFFE_Q_DFFLC.O
Info:  3.7  5.1    Net led[2] (2,9) -> (2,18)
Info:                Sink LED_B_SB_LUT4_O_LC.I3
Info:                Defined in:
Info:                  top.v:52.14-52.17
Info:  0.9  6.0  Source LED_B_SB_LUT4_O_LC.O
Info:  4.9 10.9    Net LED_B$SB_IO_OUT (2,18) -> (5,31)
Info:                Sink LED_B$sb_io.D_OUT_0
Info:                Defined in:
Info:                  top.v:9.59-9.64
Info: 2.3 ns logic, 8.6 ns routing

Info: Critical path report for cross-domain path 'posedge CLK$SB_IO_IN_$glb_clk' -> 'posedge CLK$SB_IO_IN':
Info: curr total
Info:  1.4  1.4  Source spi_rw_SB_DFFE_Q_D_SB_LUT4_O_LC.O
Info:  5.5  6.9    Net spi_rw (2,2) -> (0,0)
Info:                Sink SB_SPI_inst.SBRWI
Info:                Defined in:
Info:                  top.v:27.8-27.14
Info:  1.5  8.4  Setup SB_SPI_inst.SBRWI
Info: 2.9 ns logic, 5.5 ns routing

Info: Max frequency for clock 'CLK$SB_IO_IN_$glb_clk': 44.55 MHz (PASS at 12.00 MHz)

Info: Max frequency for posedge CLK$SB_IO_IN          -> posedge CLK$SB_IO_IN_$glb_clk: 48.50 MHz (PASS at 12.00 MHz)
Info: Max frequency for posedge CLK$SB_IO_IN_$glb_clk -> posedge CLK$SB_IO_IN         : 99.77 MHz (PASS at 12.00 MHz)

Info: Clock to clock delay posedge CLK$SB_IO_IN_$glb_clk -> posedge CLK$SB_IO_IN         : -1.59 ns
Info: Clock to clock delay posedge CLK$SB_IO_IN          -> posedge CLK$SB_IO_IN_$glb_clk: 1.59 ns

Info: Clock 'CLK$SB_IO_IN' has no interior paths

Info: Max delay <async>                       -> posedge CLK$SB_IO_IN         : 9.68 ns
Info: Max delay posedge CLK$SB_IO_IN          -> <async>                      : 9.10 ns
Info: Max delay posedge CLK$SB_IO_IN          -> posedge CLK$SB_IO_IN_$glb_clk: 22.21 ns
Info: Max delay posedge CLK$SB_IO_IN_$glb_clk -> <async>                      : 10.86 ns
Info: Max delay posedge CLK$SB_IO_IN_$glb_clk -> posedge CLK$SB_IO_IN         : 8.43 ns

Info: Slack histogram:
Info:  legend: * represents 1 endpoint(s)
Info:          + represents [1,1) endpoint(s)
Info: [ 60887,  61811) |******************************************************+
Info: [ 61811,  62735) |************************************************************ 
Info: [ 62735,  63659) |*************+
Info: [ 63659,  64583) |****+
Info: [ 64583,  65507) |*******+
Info: [ 65507,  66431) |********+
Info: [ 66431,  67355) |******+
Info: [ 67355,  68279) |**************+
Info: [ 68279,  69203) |+
Info: [ 69203,  70127) |******************************+
Info: [ 70127,  71051) |*********+
Info: [ 71051,  71975) | 
Info: [ 71975,  72899) |********+
Info: [ 72899,  73823) |*********+
Info: [ 73823,  74747) | 
Info: [ 74747,  75671) |*+
Info: [ 75671,  76595) |*****************************************+
Info: [ 76595,  77519) |*********+
Info: [ 77519,  78443) |***********+
Info: [ 78443,  79367) |*******************************+

Info: Program finished normally.
icepack top.asc top.bin
