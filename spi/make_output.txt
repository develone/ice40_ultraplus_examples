yosys -p "synth_ice40 -top top  -json top.json" top.v

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.33+79 (git sha1 b52f6cb19, gcc 12.2.0-14 -fPIC -Os)


-- Parsing `top.v' using frontend ` -vlog2k' --

1. Executing Verilog-2005 frontend: top.v
Parsing Verilog input from `top.v' to AST representation.
Storing AST representation for module `$abstract\spi_slave'.
Storing AST representation for module `$abstract\top'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top  -json top.json' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\top'.
Generating RTLIL representation for module `\top'.

2.3.1. Analyzing design hierarchy..
Top module:  \top

2.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\spi_slave'.
Generating RTLIL representation for module `\spi_slave'.

2.3.3. Analyzing design hierarchy..
Top module:  \top
Used module:     \spi_slave

2.3.4. Analyzing design hierarchy..
Top module:  \top
Used module:     \spi_slave
Removing unused module `$abstract\top'.
Removing unused module `$abstract\spi_slave'.
Removed 2 unused modules.

2.4. Executing PROC pass (convert processes to netlists).

2.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$242 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$235 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$231 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$224 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$221 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$218 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$215 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$212 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$204 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$197 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$193 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$186 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$183 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$180 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$177 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$174 in module SB_DFFSR.
Marked 2 switch rules as full_case in process $proc$spi_slave.v:61$431 in module spi_slave.
Marked 4 switch rules as full_case in process $proc$top.v:68$390 in module top.
Removed a total of 0 dead cases.

2.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 54 assignments to connections.

2.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$245'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$241'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$234'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$230'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$223'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$220'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$217'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$214'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$211'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$209'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$207'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$203'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$196'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$192'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$185'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$182'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$179'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$176'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$173'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$171'.
  Set init value: \Q = 1'0
Found init rule in `\spi_slave.$proc$spi_slave.v:0$471'.
  Set init value: \rd_data_available = 1'0
  Set init value: \rd_data = 0
  Set init value: \counter_read = 5'00000
  Set init value: \spi_clk_reg = 2'00
  Set init value: \spi_ss_reg = 2'00
  Set init value: \mosi_reg = 2'00
  Set init value: \miso_out_reg = 1'0
  Set init value: \state_rd = 8'00000001
  Set init value: \wr_reg_full = 1'0
  Set init value: \wr_data_reg = 24'110010101111111001110111
  Set init value: \wr_queue_full = 1'0
  Set init value: \wr_data_queue = 24'000000000000000000000000
  Set init value: \buffer_rd_ack = 1'0
  Set init value: \rd_data_local = 0
Found init rule in `\top.$proc$top.v:0$417'.
  Set init value: \spi_wr_en = 1'0
  Set init value: \spi_wr_data = 24'000000000000000000000000
  Set init value: \spi_rd_ack = 1'0
  Set init value: \led = 3'000
  Set init value: \spi_recv_data_reg = 0
  Set init value: \handle_data = 1'0
  Set init value: \vec_ptr = 8'00000000
  Set init value: \sending_vector = 1'0

2.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$242'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$231'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$221'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$215'.
Found async reset \S in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$204'.
Found async reset \R in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$193'.
Found async reset \S in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$183'.
Found async reset \R in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$177'.

2.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~44 debug messages>

2.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$245'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$242'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$241'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$235'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$234'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$231'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$230'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$224'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$223'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$221'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$220'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$218'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$217'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$215'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$214'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$212'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$211'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$210'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$209'.
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:882$208'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$207'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$204'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$203'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$197'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$196'.
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$193'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$192'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$186'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$185'.
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$183'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$182'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$180'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$179'.
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$177'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$176'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$174'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$173'.
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$172'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$171'.
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:271$170'.
Creating decoders for process `\spi_slave.$proc$spi_slave.v:0$471'.
Creating decoders for process `\spi_slave.$proc$spi_slave.v:61$431'.
     1/14: $0\rd_data_local[31:0]
     2/14: $0\buffer_rd_ack[0:0]
     3/14: $0\wr_data_queue[23:0]
     4/14: $0\wr_queue_full[0:0]
     5/14: $0\wr_data_reg[23:0]
     6/14: $0\wr_reg_full[0:0]
     7/14: $0\state_rd[7:0]
     8/14: $0\miso_out_reg[0:0]
     9/14: $0\mosi_reg[1:0]
    10/14: $0\spi_ss_reg[1:0]
    11/14: $0\spi_clk_reg[1:0]
    12/14: $0\counter_read[4:0]
    13/14: $0\rd_data[31:0]
    14/14: $0\rd_data_available[0:0]
Creating decoders for process `\top.$proc$top.v:0$417'.
Creating decoders for process `\top.$proc$top.v:68$390'.
     1/15: $2$memwr$\vector$top.v:112$386_EN[23:0]$409
     2/15: $2$memwr$\vector$top.v:112$386_DATA[23:0]$408
     3/15: $2$memwr$\vector$top.v:112$386_ADDR[7:0]$407
     4/15: $1$memwr$\vector$top.v:112$386_EN[23:0]$406
     5/15: $1$memwr$\vector$top.v:112$386_DATA[23:0]$405
     6/15: $1$memwr$\vector$top.v:112$386_ADDR[7:0]$404
     7/15: $0\spi_wr_en[0:0]
     8/15: $0\spi_rd_ack[0:0]
     9/15: $0\sending_vector[0:0]
    10/15: $0\vec_ptr[7:0]
    11/15: $0\reg_bits_inversion[23:0]
    12/15: $0\handle_data[0:0]
    13/15: $0\spi_recv_data_reg[31:0]
    14/15: $0\led[2:0]
    15/15: $0\spi_wr_data[23:0]

2.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\top.\spi_reset' from process `\top.$proc$top.v:0$417'.
No latch inferred for signal `\top.\i' from process `\top.$proc$top.v:0$417'.
No latch inferred for signal `\top.$memwr$\vector$top.v:52$382_EN' from process `\top.$proc$top.v:0$417'.
No latch inferred for signal `\top.$memwr$\vector$top.v:52$383_EN' from process `\top.$proc$top.v:0$417'.
No latch inferred for signal `\top.$memwr$\vector$top.v:52$384_EN' from process `\top.$proc$top.v:0$417'.
No latch inferred for signal `\top.$memwr$\vector$top.v:52$385_EN' from process `\top.$proc$top.v:0$417'.

2.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$242'.
  created $adff cell `$procdff$773' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$235'.
  created $dff cell `$procdff$774' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$231'.
  created $adff cell `$procdff$775' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$224'.
  created $dff cell `$procdff$776' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$221'.
  created $adff cell `$procdff$777' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$218'.
  created $dff cell `$procdff$778' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$215'.
  created $adff cell `$procdff$779' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$212'.
  created $dff cell `$procdff$780' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$210'.
  created $dff cell `$procdff$781' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:882$208'.
  created $dff cell `$procdff$782' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$204'.
  created $adff cell `$procdff$783' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$197'.
  created $dff cell `$procdff$784' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$193'.
  created $adff cell `$procdff$785' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$186'.
  created $dff cell `$procdff$786' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$183'.
  created $adff cell `$procdff$787' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$180'.
  created $dff cell `$procdff$788' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$177'.
  created $adff cell `$procdff$789' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$174'.
  created $dff cell `$procdff$790' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$172'.
  created $dff cell `$procdff$791' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:271$170'.
  created $dff cell `$procdff$792' with positive edge clock.
Creating register for signal `\spi_slave.\rd_data_available' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$793' with positive edge clock.
Creating register for signal `\spi_slave.\rd_data' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$794' with positive edge clock.
Creating register for signal `\spi_slave.\counter_read' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$795' with positive edge clock.
Creating register for signal `\spi_slave.\spi_clk_reg' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$796' with positive edge clock.
Creating register for signal `\spi_slave.\spi_ss_reg' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$797' with positive edge clock.
Creating register for signal `\spi_slave.\mosi_reg' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$798' with positive edge clock.
Creating register for signal `\spi_slave.\miso_out_reg' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$799' with positive edge clock.
Creating register for signal `\spi_slave.\state_rd' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$800' with positive edge clock.
Creating register for signal `\spi_slave.\wr_reg_full' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$801' with positive edge clock.
Creating register for signal `\spi_slave.\wr_data_reg' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$802' with positive edge clock.
Creating register for signal `\spi_slave.\wr_queue_full' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$803' with positive edge clock.
Creating register for signal `\spi_slave.\wr_data_queue' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$804' with positive edge clock.
Creating register for signal `\spi_slave.\buffer_rd_ack' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$805' with positive edge clock.
Creating register for signal `\spi_slave.\rd_data_local' using process `\spi_slave.$proc$spi_slave.v:61$431'.
  created $dff cell `$procdff$806' with positive edge clock.
Creating register for signal `\top.\spi_wr_en' using process `\top.$proc$top.v:68$390'.
  created $dff cell `$procdff$807' with positive edge clock.
Creating register for signal `\top.\spi_wr_data' using process `\top.$proc$top.v:68$390'.
  created $dff cell `$procdff$808' with positive edge clock.
Creating register for signal `\top.\spi_rd_data_available_buf' using process `\top.$proc$top.v:68$390'.
  created $dff cell `$procdff$809' with positive edge clock.
Creating register for signal `\top.\spi_rd_ack' using process `\top.$proc$top.v:68$390'.
  created $dff cell `$procdff$810' with positive edge clock.
Creating register for signal `\top.\led' using process `\top.$proc$top.v:68$390'.
  created $dff cell `$procdff$811' with positive edge clock.
Creating register for signal `\top.\spi_recv_data_reg' using process `\top.$proc$top.v:68$390'.
  created $dff cell `$procdff$812' with positive edge clock.
Creating register for signal `\top.\handle_data' using process `\top.$proc$top.v:68$390'.
  created $dff cell `$procdff$813' with positive edge clock.
Creating register for signal `\top.\reg_bits_inversion' using process `\top.$proc$top.v:68$390'.
  created $dff cell `$procdff$814' with positive edge clock.
Creating register for signal `\top.\vec_ptr' using process `\top.$proc$top.v:68$390'.
  created $dff cell `$procdff$815' with positive edge clock.
Creating register for signal `\top.\sending_vector' using process `\top.$proc$top.v:68$390'.
  created $dff cell `$procdff$816' with positive edge clock.
Creating register for signal `\top.$memwr$\vector$top.v:112$386_ADDR' using process `\top.$proc$top.v:68$390'.
  created $dff cell `$procdff$817' with positive edge clock.
Creating register for signal `\top.$memwr$\vector$top.v:112$386_DATA' using process `\top.$proc$top.v:68$390'.
  created $dff cell `$procdff$818' with positive edge clock.
Creating register for signal `\top.$memwr$\vector$top.v:112$386_EN' using process `\top.$proc$top.v:68$390'.
  created $dff cell `$procdff$819' with positive edge clock.

2.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$245'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$242'.
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1414$242'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$241'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$235'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1353$235'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$234'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$231'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1273$231'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$230'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$224'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1212$224'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$223'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1138$221'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$220'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$218'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1088$218'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$217'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1017$215'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$214'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$212'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:967$212'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$211'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$210'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:922$210'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$209'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:882$208'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$207'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$204'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:803$204'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$203'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$197'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:742$197'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$196'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$193'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:662$193'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$192'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$186'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:601$186'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$185'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:527$183'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$182'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$180'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:477$180'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$179'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:406$177'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$176'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$174'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:356$174'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$173'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$172'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:311$172'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$171'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:271$170'.
Removing empty process `spi_slave.$proc$spi_slave.v:0$471'.
Found and cleaned up 20 empty switches in `\spi_slave.$proc$spi_slave.v:61$431'.
Removing empty process `spi_slave.$proc$spi_slave.v:61$431'.
Removing empty process `top.$proc$top.v:0$417'.
Found and cleaned up 6 empty switches in `\top.$proc$top.v:68$390'.
Removing empty process `top.$proc$top.v:68$390'.
Cleaned up 44 empty switches.

2.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_slave.
<suppressed ~20 debug messages>
Optimizing module top.
<suppressed ~5 debug messages>

2.5. Executing FLATTEN pass (flatten design).
Deleting now unused module spi_slave.
<suppressed ~1 debug messages>

2.6. Executing TRIBUF pass.

2.7. Executing DEMINOUT pass (demote inout ports to input or output).

2.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~14 debug messages>

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 5 unused cells and 189 unused wires.
<suppressed ~7 debug messages>

2.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.11. Executing OPT pass (performing simple optimizations).

2.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~69 debug messages>
Removed a total of 23 cells.

2.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\spi_slave_inst.$procmux$565: \spi_slave_inst.wr_reg_full -> 1'0
      Replacing known input bits on port B of cell $flatten\spi_slave_inst.$procmux$653: \spi_slave_inst.rd_data_available -> 1'1
      Replacing known input bits on port A of cell $procmux$746: \handle_data -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$671.
    dead port 2/2 on $mux $procmux$678.
    dead port 2/2 on $mux $procmux$685.
Removed 3 multiplexer ports.
<suppressed ~31 debug messages>

2.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$669:
      Old ports: A=24'000000000000000000000000, B=24'111111111111111111111111, Y=$procmux$669_Y
      New ports: A=1'0, B=1'1, Y=$procmux$669_Y [0]
      New connections: $procmux$669_Y [23:1] = { $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] $procmux$669_Y [0] }
    New ctrl vector for $pmux cell $procmux$702: $auto$opt_reduce.cc:134:opt_pmux$822
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$688:
      Old ports: A=24'000000000000000000000000, B=$2$memwr$\vector$top.v:112$386_EN[23:0]$409, Y=$0$memwr$\vector$top.v:112$386_EN[23:0]$393
      New ports: A=1'0, B=$procmux$669_Y [0], Y=$0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0]
      New connections: $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [23:1] = { $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] $0$memwr$\vector$top.v:112$386_EN[23:0]$393 [0] }
  Optimizing cells in module \top.
Performed a total of 5 changes.

2.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

2.11.6. Executing OPT_DFF pass (perform DFF optimizations).

2.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 33 unused wires.
<suppressed ~1 debug messages>

2.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.9. Rerunning OPT passes. (Maybe there is more to do..)

2.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

2.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\spi_slave_inst.$procmux$518: $auto$opt_reduce.cc:134:opt_pmux$824
    New ctrl vector for $pmux cell $flatten\spi_slave_inst.$procmux$632: $auto$opt_reduce.cc:134:opt_pmux$826
  Optimizing cells in module \top.
Performed a total of 2 changes.

2.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

2.11.13. Executing OPT_DFF pass (perform DFF optimizations).

2.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.16. Rerunning OPT passes. (Maybe there is more to do..)

2.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

2.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.11.20. Executing OPT_DFF pass (perform DFF optimizations).

2.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.23. Finished OPT passes. (There is nothing left to do.)

2.12. Executing FSM pass (extract and optimize FSM).

2.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.spi_slave_inst.state_rd as FSM state register:
    Register has an initialization value.

2.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$814 ($dff) from module top (D = $not$top.v:98$410_Y, Q = \reg_bits_inversion).
Adding SRST signal on $procdff$813 ($dff) from module top (D = $0\spi_rd_ack[0:0], Q = \handle_data, rval = 1'0).
Adding EN signal on $procdff$812 ($dff) from module top (D = \spi_slave_inst.rd_data, Q = \spi_recv_data_reg).
Adding EN signal on $procdff$811 ($dff) from module top (D = \spi_recv_data_reg [26:24], Q = \led).
Adding EN signal on $flatten\spi_slave_inst.$procdff$806 ($dff) from module top (D = { \spi_slave_inst.mosi_reg [0] \spi_slave_inst.rd_data_local [31:1] }, Q = \spi_slave_inst.rd_data_local).
Adding SRST signal on $flatten\spi_slave_inst.$procdff$805 ($dff) from module top (D = $flatten\spi_slave_inst.$procmux$526_Y, Q = \spi_slave_inst.buffer_rd_ack, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$838 ($sdff) from module top (D = 1'1, Q = \spi_slave_inst.buffer_rd_ack).
Adding EN signal on $flatten\spi_slave_inst.$procdff$804 ($dff) from module top (D = \spi_wr_data, Q = \spi_slave_inst.wr_data_queue).
Adding SRST signal on $flatten\spi_slave_inst.$procdff$803 ($dff) from module top (D = $flatten\spi_slave_inst.$procmux$538_Y, Q = \spi_slave_inst.wr_queue_full, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$841 ($sdff) from module top (D = 1'1, Q = \spi_slave_inst.wr_queue_full).
Adding EN signal on $flatten\spi_slave_inst.$procdff$802 ($dff) from module top (D = $flatten\spi_slave_inst.$0\wr_data_reg[23:0], Q = \spi_slave_inst.wr_data_reg).
Adding SRST signal on $flatten\spi_slave_inst.$procdff$801 ($dff) from module top (D = $flatten\spi_slave_inst.$procmux$571_Y, Q = \spi_slave_inst.wr_reg_full, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$850 ($sdff) from module top (D = 1'0, Q = \spi_slave_inst.wr_reg_full).
Adding EN signal on $flatten\spi_slave_inst.$procdff$800 ($dff) from module top (D = $flatten\spi_slave_inst.$0\state_rd[7:0], Q = \spi_slave_inst.state_rd).
Adding EN signal on $flatten\spi_slave_inst.$procdff$794 ($dff) from module top (D = { \spi_slave_inst.mosi_reg [0] \spi_slave_inst.rd_data_local [31:1] }, Q = \spi_slave_inst.rd_data).
Adding SRST signal on $flatten\spi_slave_inst.$procdff$793 ($dff) from module top (D = $flatten\spi_slave_inst.$procmux$659_Y, Q = \spi_slave_inst.rd_data_available, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$874 ($sdff) from module top (D = 1'1, Q = \spi_slave_inst.rd_data_available).

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 25 unused cells and 25 unused wires.
<suppressed ~26 debug messages>

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

2.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

2.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

2.13.13. Executing OPT_DFF pass (perform DFF optimizations).

2.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

2.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.16. Rerunning OPT passes. (Maybe there is more to do..)

2.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

2.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.20. Executing OPT_DFF pass (perform DFF optimizations).

2.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.23. Finished OPT passes. (There is nothing left to do.)

2.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 5 address bits (of 8) from memory init port top.$auto$proc_memwr.cc:45:proc_memwr$820 (vector).
Removed top 29 address bits (of 32) from memory init port top.$meminit$\vector$top.v:52$413 (vector).
Removed top 29 address bits (of 32) from memory init port top.$meminit$\vector$top.v:52$414 (vector).
Removed top 29 address bits (of 32) from memory init port top.$meminit$\vector$top.v:52$415 (vector).
Removed top 29 address bits (of 32) from memory init port top.$meminit$\vector$top.v:52$416 (vector).
Removed top 5 address bits (of 8) from memory read port top.$memrd$\vector$top.v:86$400 (vector).
Removed top 30 bits (of 32) from port B of cell top.$lt$top.v:113$411 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$add$top.v:115$412 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$add$top.v:115$412 ($add).
Removed top 5 bits (of 8) from port B of cell top.$procmux$670_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$862 ($ne).
Removed top 5 bits (of 8) from mux cell top.$procmux$694 ($mux).
Removed top 5 bits (of 8) from port B of cell top.$procmux$703_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$procmux$704_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$procmux$717_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$866 ($ne).
Removed top 6 bits (of 8) from port B of cell top.$procmux$743_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$procmux$759_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$847 ($ne).
Removed top 7 bits (of 8) from port B of cell top.$flatten\spi_slave_inst.$procmux$522_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\spi_slave_inst.$procmux$519_CMP0 ($eq).
Removed top 1 bits (of 2) from FF cell top.$flatten\spi_slave_inst.$procdff$798 ($dff).
Removed top 27 bits (of 32) from port B of cell top.$flatten\spi_slave_inst.$ge$spi_slave.v:122$452 ($ge).
Removed top 31 bits (of 32) from port B of cell top.$flatten\spi_slave_inst.$add$spi_slave.v:120$451 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\spi_slave_inst.$add$spi_slave.v:120$451 ($add).
Removed top 27 bits (of 32) from port B of cell top.$flatten\spi_slave_inst.$lt$spi_slave.v:113$449 ($lt).
Removed top 29 bits (of 32) from port B of cell top.$flatten\spi_slave_inst.$ge$spi_slave.v:113$448 ($ge).
Removed top 2 bits (of 5) from port B of cell top.$flatten\spi_slave_inst.$eq$spi_slave.v:111$447 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\spi_slave_inst.$eq$spi_slave.v:103$443 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\spi_slave_inst.$eq$spi_slave.v:93$441 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\spi_slave_inst.$eq$spi_slave.v:37$424 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\spi_slave_inst.$eq$spi_slave.v:35$422 ($eq).
Removed top 5 bits (of 8) from mux cell top.$procmux$683 ($mux).
Removed top 5 bits (of 8) from wire top.$0$memwr$\vector$top.v:112$386_ADDR[7:0]$391.
Removed top 5 bits (of 8) from wire top.$2$memwr$\vector$top.v:112$386_ADDR[7:0]$407.
Removed top 24 bits (of 32) from wire top.$add$top.v:115$412_Y.
Removed top 27 bits (of 32) from wire top.$flatten\spi_slave_inst.$add$spi_slave.v:120$451_Y.

2.15. Executing PEEPOPT pass (run peephole optimizers).

2.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

2.17. Executing SHARE pass (SAT-based resource sharing).

2.18. Executing TECHMAP pass (map to technology primitives).

2.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.18.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~114 debug messages>

2.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.21. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$top.v:115$412 ($add).
  creating $macc model for $flatten\spi_slave_inst.$add$spi_slave.v:120$451 ($add).
  creating $alu model for $macc $flatten\spi_slave_inst.$add$spi_slave.v:120$451.
  creating $alu model for $macc $add$top.v:115$412.
  creating $alu model for $flatten\spi_slave_inst.$ge$spi_slave.v:113$448 ($ge): new $alu
  creating $alu model for $flatten\spi_slave_inst.$ge$spi_slave.v:122$452 ($ge): new $alu
  creating $alu model for $flatten\spi_slave_inst.$lt$spi_slave.v:113$449 ($lt): merged with $flatten\spi_slave_inst.$ge$spi_slave.v:122$452.
  creating $alu model for $lt$top.v:113$411 ($lt): new $alu
  creating $alu cell for $lt$top.v:113$411: $auto$alumacc.cc:485:replace_alu$886
  creating $alu cell for $flatten\spi_slave_inst.$ge$spi_slave.v:122$452, $flatten\spi_slave_inst.$lt$spi_slave.v:113$449: $auto$alumacc.cc:485:replace_alu$897
  creating $alu cell for $flatten\spi_slave_inst.$ge$spi_slave.v:113$448: $auto$alumacc.cc:485:replace_alu$910
  creating $alu cell for $add$top.v:115$412: $auto$alumacc.cc:485:replace_alu$919
  creating $alu cell for $flatten\spi_slave_inst.$add$spi_slave.v:120$451: $auto$alumacc.cc:485:replace_alu$922
  created 5 $alu and 0 $macc cells.

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

2.22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.6. Executing OPT_DFF pass (perform DFF optimizations).

2.22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 5 unused wires.
<suppressed ~2 debug messages>

2.22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.22.9. Rerunning OPT passes. (Maybe there is more to do..)

2.22.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

2.22.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.13. Executing OPT_DFF pass (perform DFF optimizations).

2.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.22.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.22.16. Finished OPT passes. (There is nothing left to do.)

2.23. Executing MEMORY pass.

2.23.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.23.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.23.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing top.vector write port 0.

2.23.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.23.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\vector'[0] in module `\top': no output FF found.
Checking read port address `\vector'[0] in module `\top': address FF has fully-defined init value, not supported.

2.23.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.23.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.23.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.23.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.23.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.25. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.vector
<suppressed ~18 debug messages>

2.26. Executing TECHMAP pass (map to technology primitives).

2.26.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

2.26.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

2.26.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.27. Executing ICE40_BRAMINIT pass.

2.28. Executing OPT pass (performing simple optimizations).

2.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~26 debug messages>

2.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

2.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$854 ($dffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$854 ($dffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$854 ($dffe) from module top.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$854 ($dffe) from module top.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$854 ($dffe) from module top.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$854 ($dffe) from module top.

2.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 7 unused cells and 32 unused wires.
<suppressed ~8 debug messages>

2.28.5. Rerunning OPT passes. (Removed registers in this run.)

2.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.28.8. Executing OPT_DFF pass (perform DFF optimizations).

2.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.28.10. Finished fast OPT passes.

2.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \vector in module \top:
  created 5 $dff cells and 0 static cells of width 24.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 5 write mux blocks.

2.30. Executing OPT pass (performing simple optimizations).

2.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~11 debug messages>

2.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

2.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$873: { \spi_slave_inst.counter_read \spi_slave_inst.spi_clk_rising_edge $flatten\spi_slave_inst.$procmux$519_CMP $auto$rtlil.cc:2446:Not$871 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$853: { \spi_slave_inst.counter_read \spi_slave_inst.spi_clk_rising_edge $flatten\spi_slave_inst.$procmux$519_CMP }
  Optimizing cells in module \top.
Performed a total of 2 changes.

2.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.6. Executing OPT_DFF pass (perform DFF optimizations).

2.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

2.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.30.9. Rerunning OPT passes. (Maybe there is more to do..)

2.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~21 debug messages>

2.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\vector[4]$978 ($dff) from module top (D = \spi_recv_data_reg [31:8], Q = \vector[4]).
Adding EN signal on $memory\vector[3]$976 ($dff) from module top (D = \spi_recv_data_reg [31:8], Q = \vector[3]).
Adding EN signal on $memory\vector[2]$974 ($dff) from module top (D = \spi_recv_data_reg [31:8], Q = \vector[2]).
Adding EN signal on $memory\vector[1]$972 ($dff) from module top (D = \spi_recv_data_reg [31:8], Q = \vector[1]).
Adding EN signal on $memory\vector[0]$970 ($dff) from module top (D = \spi_recv_data_reg [31:8], Q = \vector[0]).

2.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 5 unused cells and 5 unused wires.
<suppressed ~6 debug messages>

2.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.30.16. Rerunning OPT passes. (Maybe there is more to do..)

2.30.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

2.30.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.30.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.20. Executing OPT_DFF pass (perform DFF optimizations).

2.30.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.30.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.30.23. Finished OPT passes. (There is nothing left to do.)

2.31. Executing ICE40_WRAPCARRY pass (wrap carries).

2.32. Executing TECHMAP pass (map to technology primitives).

2.32.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.32.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.32.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$821d2886e47353e724eaca46af4992e9c3e6ac1d\_80_ice40_alu for cells of type $alu.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$d1615bf4e5e328245ffd1550e5fe105901cda77b\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~509 debug messages>

2.33. Executing OPT pass (performing simple optimizations).

2.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~237 debug messages>

2.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~162 debug messages>
Removed a total of 54 cells.

2.33.3. Executing OPT_DFF pass (perform DFF optimizations).

2.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 255 unused wires.
<suppressed ~5 debug messages>

2.33.5. Finished fast OPT passes.

2.34. Executing ICE40_OPT pass (performing simple optimizations).

2.34.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$886.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$886.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$919.slice[0].carry: CO=\vec_ptr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$922.slice[0].carry: CO=\spi_slave_inst.counter_read [0]

2.34.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~49 debug messages>

2.34.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.34.4. Executing OPT_DFF pass (perform DFF optimizations).

2.34.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

2.34.6. Rerunning OPT passes. (Removed registers in this run.)

2.34.7. Running ICE40 specific optimizations.

2.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.34.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.34.10. Executing OPT_DFF pass (perform DFF optimizations).

2.34.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.34.12. Finished OPT passes. (There is nothing left to do.)

2.35. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.36. Executing TECHMAP pass (map to technology primitives).

2.36.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.36.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
No more expansions possible.
<suppressed ~366 debug messages>

2.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

2.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$919.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$922.slice[0].carry ($lut).

2.39. Executing ICE40_OPT pass (performing simple optimizations).

2.39.1. Running ICE40 specific optimizations.

2.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

2.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

2.39.4. Executing OPT_DFF pass (perform DFF optimizations).

2.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1687 unused wires.
<suppressed ~1 debug messages>

2.39.6. Rerunning OPT passes. (Removed registers in this run.)

2.39.7. Running ICE40 specific optimizations.

2.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.39.10. Executing OPT_DFF pass (perform DFF optimizations).

2.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.39.12. Finished OPT passes. (There is nothing left to do.)

2.40. Executing TECHMAP pass (map to technology primitives).

2.40.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.40.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.41. Executing ABC pass (technology mapping using ABC).

2.41.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 643 gates and 945 wires to a netlist network with 300 inputs and 116 outputs.

2.41.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     191.
ABC: Participating nodes from both networks       =     404.
ABC: Participating nodes from the first network   =     190. (  63.55 % of nodes)
ABC: Participating nodes from the second network  =     214. (  71.57 % of nodes)
ABC: Node pairs (any polarity)                    =     190. (  63.55 % of names can be moved)
ABC: Node pairs (same polarity)                   =     168. (  56.19 % of names can be moved)
ABC: Total runtime =     0.04 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      298
ABC RESULTS:        internal signals:      529
ABC RESULTS:           input signals:      300
ABC RESULTS:          output signals:      116
Removing temp directory.

2.42. Executing ICE40_WRAPCARRY pass (wrap carries).

2.43. Executing TECHMAP pass (map to technology primitives).

2.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 7 unused cells and 535 unused wires.

2.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      309
  1-LUT               33
  2-LUT               32
  3-LUT               77
  4-LUT              167
  with \SB_CARRY    (#0)    9
  with \SB_CARRY    (#1)   10

Eliminating LUTs.
Number of LUTs:      309
  1-LUT               33
  2-LUT               32
  3-LUT               77
  4-LUT              167
  with \SB_CARRY    (#0)    9
  with \SB_CARRY    (#1)   10

Combining LUTs.
Number of LUTs:      308
  1-LUT               33
  2-LUT               31
  3-LUT               77
  4-LUT              167
  with \SB_CARRY    (#0)    9
  with \SB_CARRY    (#1)   10

Eliminated 0 LUTs.
Combined 1 LUTs.
<suppressed ~1889 debug messages>

2.45. Executing TECHMAP pass (map to technology primitives).

2.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$a54d8b8d2c90a828ee71c2d82e7e1612992a7ab8\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$279a8d961e6b2ded8450bee8ed637cb9efa31f02\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$368887f60ccee882960866ce81cb4250106048b1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod$c227f721a44fefdada39f6c9acbbd79680d6e12a\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$441de597d9318495d3225f370c9f7379b3b0fd0d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010011 for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$6ce363283ffa804146f8335d594e2323248e0a20\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000010 for cells of type $lut.
Using template $paramod$ae9b8abdb4f811ce37985dd5106af9cd21223954\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$724ffb8289c5b8b880df76c6f3c56ad6c062fae0\$lut for cells of type $lut.
Using template $paramod$f54c0ffd7b041ca43eac7710ab19c0666d826c22\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$a4df2b5be2b644499880e088a11556935f22b401\$lut for cells of type $lut.
Using template $paramod$b1f01d1a6442cce30a958d756be8bbcf976f6dba\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$ce352c9f2c315e2e2df4d954b177f8b51f7dfcc0\$lut for cells of type $lut.
Using template $paramod$d6cf0a4b6f6ccd87588da28c41b5b6c258da2509\$lut for cells of type $lut.
Using template $paramod$03ebaa21b7709abb99593ddc6ded49b85a14688d\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~1000 debug messages>
Removed 0 unused cells and 695 unused wires.

2.46. Executing AUTONAME pass.
Renamed 10484 objects in module top (70 iterations).
<suppressed ~871 debug messages>

2.47. Executing HIERARCHY pass (managing design hierarchy).

2.47.1. Analyzing design hierarchy..
Top module:  \top

2.47.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.48. Printing statistics.

=== top ===

   Number of wires:                255
   Number of wire bits:           1054
   Number of public wires:         255
   Number of public wire bits:    1054
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                666
     SB_CARRY                       14
     SB_DFF                         47
     SB_DFFE                       292
     SB_DFFESR                       3
     SB_DFFESS                       1
     SB_DFFSR                        1
     SB_LUT4                       308

2.49. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.50. Executing JSON backend.

End of script. Logfile hash: 416ea6d9c4, CPU: user 1.77s system 0.01s, MEM: 26.50 MB peak
Yosys 0.33+79 (git sha1 b52f6cb19, gcc 12.2.0-14 -fPIC -Os)
Time spent: 26% 13x read_verilog (0 sec), 16% 1x abc (0 sec), ...
nextpnr-ice40 --up5k --package sg48 --json top.json --pcf pico-ice.pcf --asc top.asc
Info: constrained 'CLK' to bel 'X12/Y31/io1'
Info: constrained 'SPI_MOSI' to bel 'X23/Y0/io1'
Info: constrained 'SPI_MISO' to bel 'X23/Y0/io0'
Info: constrained 'SPI_SCK' to bel 'X24/Y0/io0'
Info: constrained 'SPI_SS' to bel 'X24/Y0/io1'
Info: constrained 'LED_G' to bel 'X4/Y31/io0'
Info: constrained 'LED_B' to bel 'X5/Y31/io0'
Info: constrained 'LED_R' to bel 'X6/Y31/io0'

Info: Packing constants..
Info: Packing IOs..
Info: Packing LUT-FFs..
Info:      220 LCs used as LUT4 only
Info:       88 LCs used as LUT4 and DFF
Info: Packing non-LUT FFs..
Info:      256 LCs used as DFF only
Info: Packing carries..
Info:        7 LCs used as CARRY only
Info: Packing indirect carry+LUT pairs...
Info:        5 LUTs merged into carry LCs
Info: Packing RAMs..
Info: Placing PLLs..
Info: Packing special functions..
Info: Packing PLLs..
Info: Promoting globals..
Info: promoting CLK$SB_IO_IN (fanout 344)
Info: promoting spi_rd_data_available_buf_SB_LUT4_I2_O [cen] (fanout 32)
Info: promoting spi_slave_inst.rd_data_available_SB_LUT4_I2_O [cen] (fanout 32)
Info: promoting spi_slave_inst.counter_read_SB_DFF_Q_1_D_SB_LUT4_O_I2[3] [cen] (fanout 31)
Info: promoting handle_data_SB_LUT4_I3_1_O_SB_LUT4_I3_O [cen] (fanout 24)
Info: Constraining chains...
Info:        3 LCs used to legalise carry chains.
Info: Checksum: 0xf3da8f3c

Info: Device utilisation:
Info: 	         ICESTORM_LC:   571/ 5280    10%
Info: 	        ICESTORM_RAM:     0/   30     0%
Info: 	               SB_IO:     8/   96     8%
Info: 	               SB_GB:     5/    8    62%
Info: 	        ICESTORM_PLL:     0/    1     0%
Info: 	         SB_WARMBOOT:     0/    1     0%
Info: 	        ICESTORM_DSP:     0/    8     0%
Info: 	      ICESTORM_HFOSC:     0/    1     0%
Info: 	      ICESTORM_LFOSC:     0/    1     0%
Info: 	              SB_I2C:     0/    2     0%
Info: 	              SB_SPI:     0/    2     0%
Info: 	              IO_I3C:     0/    2     0%
Info: 	         SB_LEDDA_IP:     0/    1     0%
Info: 	         SB_RGBA_DRV:     0/    1     0%
Info: 	      ICESTORM_SPRAM:     0/    4     0%

Info: Placed 8 cells based on constraints.
Info: Creating initial analytic placement for 559 cells, random placement wirelen = 12676.
Info:     at initial placer iter 0, wirelen = 216
Info:     at initial placer iter 1, wirelen = 186
Info:     at initial placer iter 2, wirelen = 179
Info:     at initial placer iter 3, wirelen = 184
Info: Running main analytical placer, max placement attempts per cell = 42632.
Info:     at iteration #1, type ALL: wirelen solved = 179, spread = 2164, legal = 3380; time = 0.02s
Info:     at iteration #2, type ALL: wirelen solved = 223, spread = 1599, legal = 3104; time = 0.02s
Info:     at iteration #3, type ALL: wirelen solved = 345, spread = 1343, legal = 3272; time = 0.02s
Info:     at iteration #4, type ALL: wirelen solved = 446, spread = 1368, legal = 2694; time = 0.02s
Info:     at iteration #5, type ALL: wirelen solved = 546, spread = 1203, legal = 3089; time = 0.02s
Info:     at iteration #6, type ALL: wirelen solved = 590, spread = 1180, legal = 3075; time = 0.02s
Info:     at iteration #7, type ALL: wirelen solved = 613, spread = 1228, legal = 3144; time = 0.02s
Info:     at iteration #8, type ALL: wirelen solved = 710, spread = 1139, legal = 3422; time = 0.02s
Info:     at iteration #9, type ALL: wirelen solved = 617, spread = 1175, legal = 3201; time = 0.02s
Info: HeAP Placer Time: 0.25s
Info:   of which solving equations: 0.09s
Info:   of which spreading cells: 0.01s
Info:   of which strict legalisation: 0.11s

Info: Running simulated annealing placer for refinement.
Info:   at iteration #1: temp = 0.000000, timing cost = 43, wirelen = 2694
Info:   at iteration #5: temp = 0.000000, timing cost = 91, wirelen = 1921
Info:   at iteration #10: temp = 0.000000, timing cost = 114, wirelen = 1727
Info:   at iteration #15: temp = 0.000000, timing cost = 78, wirelen = 1652
Info:   at iteration #20: temp = 0.000000, timing cost = 117, wirelen = 1603
Info:   at iteration #20: temp = 0.000000, timing cost = 113, wirelen = 1604 
Info: SA placement time 0.32s

Info: Max frequency for clock 'CLK$SB_IO_IN_$glb_clk': 45.54 MHz (PASS at 12.00 MHz)

Info: Max delay <async>                       -> posedge CLK$SB_IO_IN_$glb_clk: 5.06 ns
Info: Max delay posedge CLK$SB_IO_IN_$glb_clk -> <async>                      : 9.91 ns

Info: Slack histogram:
Info:  legend: * represents 2 endpoint(s)
Info:          + represents [1,2) endpoint(s)
Info: [ 61375,  62311) |****+
Info: [ 62311,  63247) |************+
Info: [ 63247,  64183) |***********+
Info: [ 64183,  65119) |*** 
Info: [ 65119,  66055) |*+
Info: [ 66055,  66991) |**********+
Info: [ 66991,  67927) |*************************+
Info: [ 67927,  68863) |*******************************+
Info: [ 68863,  69799) |*******************************+
Info: [ 69799,  70735) |**********+
Info: [ 70735,  71671) |***************+
Info: [ 71671,  72607) |+
Info: [ 72607,  73543) |******+
Info: [ 73543,  74479) |**+
Info: [ 74479,  75415) |********+
Info: [ 75415,  76351) |****** 
Info: [ 76351,  77287) |********* 
Info: [ 77287,  78223) |************************************************************ 
Info: [ 78223,  79159) |*************************************************+
Info: [ 79159,  80095) |**+
Info: Checksum: 0xf622ae7b

Info: Routing..
Info: Setting up routing queue.
Info: Routing 1543 arcs.
Info:            |   (re-)routed arcs  |   delta    | remaining|       time spent     |
Info:    IterCnt |  w/ripup   wo/ripup |  w/r  wo/r |      arcs| batch(sec) total(sec)|
Info:       1000 |       95        899 |   95   899 |       664|       0.22       0.22|
Info:       2000 |      330       1655 |  235   756 |        11|       0.21       0.43|
Info:       2010 |      330       1666 |    0    11 |         0|       0.01       0.44|
Info: Routing complete.
Info: Router1 time 0.44s
Info: Checksum: 0x3881a53e

Info: Critical path report for clock 'CLK$SB_IO_IN_$glb_clk' (posedge -> posedge):
Info: curr total
Info:  1.4  1.4  Source vec_ptr_SB_DFF_Q_D_SB_LUT4_O_5_LC.O
Info:  3.5  4.9    Net led_SB_LUT4_I0_1_O_SB_LUT4_O_1_I2[2] (8,12) -> (10,8)
Info:                Sink handle_data_SB_LUT4_I3_1_O_SB_LUT4_I1_O_SB_LUT4_O_I0_SB_LUT4_O_2_I0_SB_LUT4_O_1_LC.I1
Info:                Defined in:
Info:                  top.v:40.14-40.21
Info:  1.2  6.1  Source handle_data_SB_LUT4_I3_1_O_SB_LUT4_I1_O_SB_LUT4_O_I0_SB_LUT4_O_2_I0_SB_LUT4_O_1_LC.O
Info:  3.0  9.1    Net handle_data_SB_LUT4_I3_1_O_SB_LUT4_I1_O_SB_LUT4_O_I0_SB_LUT4_O_2_I0[2] (10,8) -> (8,6)
Info:                Sink led_SB_LUT4_I0_O_SB_LUT4_I0_O_SB_LUT4_O_20_I3_SB_LUT4_O_I0_SB_LUT4_O_2_LC.I2
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ice40/cells_map.v:6.21-6.22
Info:  1.2 10.3  Source led_SB_LUT4_I0_O_SB_LUT4_I0_O_SB_LUT4_O_20_I3_SB_LUT4_O_I0_SB_LUT4_O_2_LC.O
Info:  1.8 12.0    Net led_SB_LUT4_I0_O_SB_LUT4_I0_O_SB_LUT4_O_20_I3_SB_LUT4_O_I0[0] (8,6) -> (8,5)
Info:                Sink led_SB_LUT4_I0_O_SB_LUT4_I0_O_SB_LUT4_O_20_I3_SB_LUT4_O_LC.I0
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ice40/cells_map.v:6.21-6.22
Info:  1.3 13.3  Source led_SB_LUT4_I0_O_SB_LUT4_I0_O_SB_LUT4_O_20_I3_SB_LUT4_O_LC.O
Info:  2.8 16.2    Net led_SB_LUT4_I0_O_SB_LUT4_I0_O_SB_LUT4_O_20_I3[3] (8,5) -> (13,5)
Info:                Sink led_SB_LUT4_I0_O_SB_LUT4_I0_O_SB_LUT4_O_20_LC.I3
Info:                Defined in:
Info:                  /usr/local/bin/../share/yosys/ice40/cells_map.v:6.21-6.22
Info:  0.8 17.0  Setup led_SB_LUT4_I0_O_SB_LUT4_I0_O_SB_LUT4_O_20_LC.I3
Info: 5.9 ns logic, 11.1 ns routing

Info: Critical path report for cross-domain path '<async>' -> 'posedge CLK$SB_IO_IN_$glb_clk':
Info: curr total
Info:  0.0  0.0  Source SPI_SCK$sb_io.D_IN_0
Info:  4.2  4.2    Net SPI_SCK$SB_IO_IN (24,0) -> (14,1)
Info:                Sink spi_slave_inst.spi_clk_reg_SB_DFF_Q_1_DFFLC.I0
Info:                Defined in:
Info:                  top.v:26.14-30.5
Info:                  spi_slave.v:5.18-5.25
Info:  1.2  5.5  Setup spi_slave_inst.spi_clk_reg_SB_DFF_Q_1_DFFLC.I0
Info: 1.2 ns logic, 4.2 ns routing

Info: Critical path report for cross-domain path 'posedge CLK$SB_IO_IN_$glb_clk' -> '<async>':
Info: curr total
Info:  1.4  1.4  Source led_SB_DFFE_Q_1_DFFLC.O
Info:  3.7  5.1    Net led[1] (5,10) -> (5,18)
Info:                Sink LED_G_SB_LUT4_O_LC.I3
Info:                Defined in:
Info:                  top.v:32.14-32.17
Info:  0.9  6.0  Source LED_G_SB_LUT4_O_LC.O
Info:  4.9 10.9    Net LED_G$SB_IO_OUT (5,18) -> (4,31)
Info:                Sink LED_G$sb_io.D_OUT_0
Info:                Defined in:
Info:                  top.v:13.45-13.50
Info: 2.3 ns logic, 8.6 ns routing

Info: Max frequency for clock 'CLK$SB_IO_IN_$glb_clk': 58.86 MHz (PASS at 12.00 MHz)

Info: Max delay <async>                       -> posedge CLK$SB_IO_IN_$glb_clk: 5.46 ns
Info: Max delay posedge CLK$SB_IO_IN_$glb_clk -> <async>                      : 10.86 ns

Info: Slack histogram:
Info:  legend: * represents 2 endpoint(s)
Info:          + represents [1,2) endpoint(s)
Info: [ 66344,  66995) |******************+
Info: [ 66995,  67646) |*******************+
Info: [ 67646,  68297) |**********************+
Info: [ 68297,  68948) |************************************************+
Info: [ 68948,  69599) |****************** 
Info: [ 69599,  70250) |******************+
Info: [ 70250,  70901) |*****+
Info: [ 70901,  71552) |************************+
Info: [ 71552,  72203) |******************+
Info: [ 72203,  72854) |+
Info: [ 72854,  73505) |******+
Info: [ 73505,  74156) |****+
Info: [ 74156,  74807) |********+
Info: [ 74807,  75458) |****** 
Info: [ 75458,  76109) |***+
Info: [ 76109,  76760) |**+
Info: [ 76760,  77411) |***********+
Info: [ 77411,  78062) |**********************************************+
Info: [ 78062,  78713) |*****************************+
Info: [ 78713,  79364) |************************************************************ 

Info: Program finished normally.
icepack top.asc top.bin
